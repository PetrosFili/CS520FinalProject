/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:50:00 GMT 2022
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.LightSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LightSource_ESTest extends LightSource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LightSource lightSource0 = new LightSource(1.0F, 1.0F, 1.0F, 0);
      lightSource0.getDiameter();
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getY(), 0.01F);
      assertEquals(0, lightSource0.getColor());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LightSource lightSource0 = new LightSource(1.0F, 1.0F, 1.0F, 0);
      float float0 = lightSource0.getZ();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(1.0F, lightSource0.getY(), 0.01F);
      assertEquals(0, lightSource0.getColor());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LightSource lightSource0 = new LightSource(1.0F, 1.0F, 1.0F, 0);
      float float0 = lightSource0.getY();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0, lightSource0.getColor());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LightSource lightSource0 = new LightSource(1.0F, 1.0F, 1.0F, 0);
      float float0 = lightSource0.getX();
      assertEquals(1.0F, lightSource0.getY(), 0.01F);
      assertEquals(0, lightSource0.getColor());
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LightSource lightSource0 = new LightSource(1.0F, 1.0F, 1.0F, 0);
      int int0 = lightSource0.getColor();
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0, int0);
      assertEquals(1.0F, lightSource0.getY(), 0.01F);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
  }
}
