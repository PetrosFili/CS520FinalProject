/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:51:32 GMT 2022
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.PatternsCatalog;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PatternsCatalog_ESTest extends PatternsCatalog_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<TextureImage> linkedList0 = new LinkedList<TextureImage>();
      Class<CatalogTexture> class0 = CatalogTexture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, 0.0F, 0.0F, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0, 0.0F, 0.0F, 0.0F, 0.0F, false);
      linkedList0.add((TextureImage) homeTexture0);
      PatternsCatalog patternsCatalog0 = new PatternsCatalog(linkedList0);
      HomeTexture homeTexture1 = (HomeTexture)patternsCatalog0.getPattern("");
      assertEquals(0.0F, homeTexture1.getYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<TextureImage> linkedList0 = new LinkedList<TextureImage>();
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 0.0F, (-1.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0, (-1.0F), 0.0F, 0.0F, 0.0F, false, false);
      linkedList0.add((TextureImage) homeTexture0);
      PatternsCatalog patternsCatalog0 = new PatternsCatalog(linkedList0);
      // Undeclared exception!
      try { 
        patternsCatalog0.getPattern("No pattern with name ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No pattern with name No pattern with name 
         //
         verifyException("com.eteks.sweethome3d.model.PatternsCatalog", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<TextureImage> linkedList0 = new LinkedList<TextureImage>();
      PatternsCatalog patternsCatalog0 = new PatternsCatalog(linkedList0);
      // Undeclared exception!
      try { 
        patternsCatalog0.getPattern((-893));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<TextureImage> linkedList0 = new LinkedList<TextureImage>();
      PatternsCatalog patternsCatalog0 = new PatternsCatalog(linkedList0);
      int int0 = patternsCatalog0.getPatternsCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<TextureImage> linkedList0 = new LinkedList<TextureImage>();
      PatternsCatalog patternsCatalog0 = new PatternsCatalog(linkedList0);
      List<TextureImage> list0 = patternsCatalog0.getPatterns();
      assertEquals(0, list0.size());
  }
}
