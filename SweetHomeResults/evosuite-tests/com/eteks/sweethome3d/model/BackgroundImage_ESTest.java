/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:23:03 GMT 2022
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.BackgroundImage;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.net.URL;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BackgroundImage_ESTest extends BackgroundImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BackgroundImage backgroundImage0 = new BackgroundImage((Content) null, (-210.19F), (-1.0F), (-45.784546F), (-1.0F), 1429.35F, 0.0F, 0.0F, true);
      boolean boolean0 = backgroundImage0.isVisible();
      assertEquals((-0.1424887F), backgroundImage0.getScale(), 0.01F);
      assertEquals(0.0F, backgroundImage0.getXOrigin(), 0.01F);
      assertTrue(boolean0);
      assertEquals(0.0F, backgroundImage0.getYOrigin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BackgroundImage backgroundImage0 = new BackgroundImage((Content) null, 1.0F, (-4025.359F), (-4025.359F), 1.0F, (-4025.359F), 0.0F, (-493.68115F), false);
      boolean boolean0 = backgroundImage0.isVisible();
      assertEquals((-493.68115F), backgroundImage0.getYOrigin(), 0.01F);
      assertEquals(2.4836336E-4F, backgroundImage0.getScale(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0.0F, backgroundImage0.getXOrigin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BackgroundImage backgroundImage0 = new BackgroundImage((Content) null, 2086.493F, 2086.493F, 1979.1296F, 2582.12F, 2582.12F, 0.0F, 1979.1296F, false);
      float float0 = backgroundImage0.getScaleDistanceXEnd();
      assertEquals(2.6731377F, backgroundImage0.getScale(), 0.01F);
      assertEquals(2582.12F, float0, 0.01F);
      assertEquals(1979.1296F, backgroundImage0.getYOrigin(), 0.01F);
      assertEquals(0.0F, backgroundImage0.getXOrigin(), 0.01F);
      assertFalse(backgroundImage0.isVisible());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BackgroundImage backgroundImage0 = new BackgroundImage((Content) null, 1.0F, (-4025.359F), (-4025.359F), 1.0F, (-4025.359F), 0.0F, (-493.68115F), false);
      float float0 = backgroundImage0.getXOrigin();
      assertEquals(2.4836336E-4F, backgroundImage0.getScale(), 0.01F);
      assertFalse(backgroundImage0.isVisible());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((-493.68115F), backgroundImage0.getYOrigin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      BackgroundImage backgroundImage0 = new BackgroundImage(temporaryURLContent0, (-1.0F), (-1.0F), 68.701F, (-1.0F), 1.0F, 1.0F, 1.0F);
      float float0 = backgroundImage0.getScaleDistanceYStart();
      assertEquals(68.701F, float0, 0.01F);
      assertTrue(backgroundImage0.isVisible());
      assertEquals(1.0F, backgroundImage0.getYOrigin(), 0.01F);
      assertEquals((-0.014770831F), backgroundImage0.getScale(), 0.01F);
      assertEquals(1.0F, backgroundImage0.getXOrigin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BackgroundImage backgroundImage0 = new BackgroundImage((Content) null, (-210.19F), (-1.0F), (-45.784546F), (-1.0F), 1429.35F, 0.0F, 0.0F, true);
      float float0 = backgroundImage0.getScaleDistanceXStart();
      assertEquals(0.0F, backgroundImage0.getXOrigin(), 0.01F);
      assertEquals(0.0F, backgroundImage0.getYOrigin(), 0.01F);
      assertEquals((-0.1424887F), backgroundImage0.getScale(), 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
      assertTrue(backgroundImage0.isVisible());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BackgroundImage backgroundImage0 = new BackgroundImage(temporaryURLContent0, 0.0F, 0.0F, 0.0F, 0.0F, 884.382F, 865.7693F, 0.0F);
      float float0 = backgroundImage0.getYOrigin();
      assertEquals(884.382F, backgroundImage0.getScaleDistanceYEnd(), 0.01F);
      assertEquals(865.7693F, backgroundImage0.getXOrigin(), 0.01F);
      assertEquals(0.0F, backgroundImage0.getScaleDistanceXStart(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, backgroundImage0.getScaleDistanceYStart(), 0.01F);
      assertTrue(backgroundImage0.isVisible());
      assertEquals(0.0F, backgroundImage0.getScaleDistanceXEnd(), 0.01F);
      assertEquals(0.0F, backgroundImage0.getScale(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BackgroundImage backgroundImage0 = new BackgroundImage((Content) null, 1.0F, (-4025.359F), (-4025.359F), 1.0F, (-4025.359F), 0.0F, (-493.68115F), false);
      float float0 = backgroundImage0.getScaleDistance();
      assertEquals(0.0F, backgroundImage0.getXOrigin(), 0.01F);
      assertFalse(backgroundImage0.isVisible());
      assertEquals(2.4836336E-4F, backgroundImage0.getScale(), 0.01F);
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((-493.68115F), backgroundImage0.getYOrigin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BackgroundImage backgroundImage0 = new BackgroundImage((Content) null, 1.0F, (-4025.359F), (-4025.359F), 1.0F, (-4025.359F), 0.0F, (-493.68115F), false);
      float float0 = backgroundImage0.getScale();
      assertFalse(backgroundImage0.isVisible());
      assertEquals((-493.68115F), backgroundImage0.getYOrigin(), 0.01F);
      assertEquals(0.0F, backgroundImage0.getXOrigin(), 0.01F);
      assertEquals(2.4836336E-4F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BackgroundImage backgroundImage0 = new BackgroundImage((Content) null, 1.0F, (-4025.359F), (-4025.359F), 1.0F, (-4025.359F), 0.0F, (-493.68115F), false);
      float float0 = backgroundImage0.getScaleDistanceYEnd();
      assertEquals(0.0F, backgroundImage0.getXOrigin(), 0.01F);
      assertEquals(2.4836336E-4F, backgroundImage0.getScale(), 0.01F);
      assertFalse(backgroundImage0.isVisible());
      assertEquals((-4025.359F), float0, 0.01F);
      assertEquals((-493.68115F), backgroundImage0.getYOrigin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      BackgroundImage backgroundImage0 = new BackgroundImage(uRLContent0, 1951.653F, 1.0F, 1.0F, 1951.653F, (-399.38F), 1.0F, 1.0F);
      backgroundImage0.getImage();
      assertEquals(0.98008054F, backgroundImage0.getScale(), 0.01F);
      assertEquals(1.0F, backgroundImage0.getXOrigin(), 0.01F);
      assertTrue(backgroundImage0.isVisible());
      assertEquals(1.0F, backgroundImage0.getYOrigin(), 0.01F);
  }
}
