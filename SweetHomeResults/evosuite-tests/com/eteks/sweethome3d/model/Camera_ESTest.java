/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:25:30 GMT 2022
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.Camera;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Camera_ESTest extends Camera_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Camera camera0 = new Camera("", (-1.0F), (-1.0F), (-1.0F), (-7663.0F), (-7663.0F), (-2337.332F));
      camera0.setFieldOfView((-7663.0F));
      assertEquals((-7663.0F), camera0.getFieldOfView(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1392409281320L, (-547L), 1392409281320L, 1392409281320L, 1392409281320L, 0.0F, 0L, camera_Lens0);
      camera0.setYaw(3332.77F);
      assertEquals(3332.77F, camera0.getYaw(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Camera camera0 = new Camera("", (-1.0F), (-1.0F), (-1.0F), (-7663.0F), (-7663.0F), (-2337.332F));
      camera0.setName("");
      camera0.setName((String) null);
      assertEquals(1392409281320L, camera0.getTime());
      assertEquals((-1.0F), camera0.getZ(), 0.01F);
      assertEquals((-1.0F), camera0.getX(), 0.01F);
      assertEquals((-7663.0F), camera0.getYaw(), 0.01F);
      assertEquals((-2337.332F), camera0.getFieldOfView(), 0.01F);
      assertEquals((-7663.0F), camera0.getPitch(), 0.01F);
      assertEquals((-1.0F), camera0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Camera camera0 = new Camera(5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F);
      camera0.setName("hXU81c[");
      assertEquals(5439.3223F, camera0.getY(), 0.01F);
      assertEquals(5439.3223F, camera0.getX(), 0.01F);
      assertEquals(5439.3223F, camera0.getFieldOfView(), 0.01F);
      assertEquals(5439.3223F, camera0.getYaw(), 0.01F);
      assertEquals(5439.3223F, camera0.getPitch(), 0.01F);
      assertEquals(1392409281320L, camera0.getTime());
      assertEquals(5439.3223F, camera0.getZ(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera("E1_)JW8,Ri<_", (-125.87225F), (-125.87225F), 2009.0F, (-125.87225F), 0.0F, (-125.87225F), (-3357L), camera_Lens0);
      camera0.setName((String) null);
      assertEquals((-125.87225F), camera0.getX(), 0.01F);
      assertEquals((-125.87225F), camera0.getY(), 0.01F);
      assertEquals(2009.0F, camera0.getZ(), 0.01F);
      assertEquals((-125.87225F), camera0.getYaw(), 0.01F);
      assertEquals(0.0F, camera0.getPitch(), 0.01F);
      assertEquals((-3357L), camera0.getTime());
      assertEquals((-125.87225F), camera0.getFieldOfView(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Camera camera0 = new Camera(591.335F, 591.335F, 591.335F, 0.0F, 0.0F, (-400.566F));
      camera0.setX((-400.566F));
      assertEquals((-400.566F), camera0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Camera camera0 = new Camera(5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F);
      camera0.setY((-21.103F));
      assertEquals((-21.103F), camera0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Camera camera0 = new Camera(5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      camera0.setLens(camera_Lens0);
      assertEquals(Camera.Lens.NORMAL, camera0.getLens());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Camera camera0 = new Camera(699.3391F, (-590.827F), (-80.0F), (-80.0F), (-80.0F), 487.1F);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      camera0.setLens(camera_Lens0);
      assertEquals(1392409281320L, camera0.getTime());
      assertEquals(699.3391F, camera0.getX(), 0.01F);
      assertEquals((-80.0F), camera0.getZ(), 0.01F);
      assertEquals((-80.0F), camera0.getYaw(), 0.01F);
      assertEquals(487.1F, camera0.getFieldOfView(), 0.01F);
      assertEquals((-80.0F), camera0.getPitch(), 0.01F);
      assertEquals((-590.827F), camera0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Camera camera0 = new Camera(5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F);
      camera0.setRenderer("");
      camera0.setRenderer((String) null);
      assertEquals(1392409281320L, camera0.getTime());
      assertEquals(5439.3223F, camera0.getX(), 0.01F);
      assertEquals(5439.3223F, camera0.getPitch(), 0.01F);
      assertEquals(5439.3223F, camera0.getY(), 0.01F);
      assertEquals(5439.3223F, camera0.getYaw(), 0.01F);
      assertEquals(5439.3223F, camera0.getFieldOfView(), 0.01F);
      assertEquals(5439.3223F, camera0.getZ(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Camera camera0 = new Camera("", 1.0F, 1.0F, 0.0F, 0.0F, 0.0F, 1.0F);
      camera0.setRenderer((String) null);
      assertEquals(1.0F, camera0.getX(), 0.01F);
      assertEquals(1.0F, camera0.getFieldOfView(), 0.01F);
      assertEquals(0.0F, camera0.getPitch(), 0.01F);
      assertEquals(1.0F, camera0.getY(), 0.01F);
      assertEquals(0.0F, camera0.getYaw(), 0.01F);
      assertEquals(0.0F, camera0.getZ(), 0.01F);
      assertEquals(1392409281320L, camera0.getTime());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Camera camera0 = new Camera(5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F);
      camera0.setZ((-1.0F));
      assertEquals((-1.0F), camera0.getZ(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Camera camera0 = new Camera(5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F, 5439.3223F);
      camera0.setPitch(1331.0F);
      assertEquals(1331.0F, camera0.getPitch(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Camera camera0 = new Camera("Q", (-3249), (-3249), (-3249), (-3249), (-3249), (-3249));
      camera0.setTime((-3249));
      assertEquals((-3249L), camera0.getTime());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera("", 1539.3113F, 1539.3113F, (-4154.73F), 1539.3113F, (-4154.73F), (-4154.73F), 0L, camera_Lens0);
      camera0.setTime(0L);
      assertEquals((-4154.73F), camera0.getPitch(), 0.01F);
      assertEquals((-4154.73F), camera0.getFieldOfView(), 0.01F);
      assertEquals((-4154.73F), camera0.getZ(), 0.01F);
      assertEquals(1539.3113F, camera0.getX(), 0.01F);
      assertEquals(1539.3113F, camera0.getY(), 0.01F);
      assertEquals(1539.3113F, camera0.getYaw(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera("E1_)JW8,Ri<_", (-125.87225F), (-125.87225F), 2009.0F, (-125.87225F), 0.0F, (-125.87225F), (-3357L), camera_Lens0);
      Camera camera1 = camera0.clone();
      assertEquals(2009.0F, camera1.getZ(), 0.01F);
      assertEquals((-125.87225F), camera1.getY(), 0.01F);
      assertEquals((-125.87225F), camera1.getX(), 0.01F);
      assertEquals((-3357L), camera1.getTime());
      assertEquals((-125.87225F), camera1.getYaw(), 0.01F);
      assertEquals(0.0F, camera1.getPitch(), 0.01F);
      assertEquals((-125.87225F), camera1.getFieldOfView(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Camera camera0 = new Camera(1.0F, 0.0F, 1.0F, (-1280.0F), 1.0F, 1.0F);
      camera0.getLens();
      assertEquals(1.0F, camera0.getX(), 0.01F);
      assertEquals(0.0F, camera0.getY(), 0.01F);
      assertEquals(1.0F, camera0.getFieldOfView(), 0.01F);
      assertEquals(1.0F, camera0.getPitch(), 0.01F);
      assertEquals((-1280.0F), camera0.getYaw(), 0.01F);
      assertEquals(1392409281320L, camera0.getTime());
      assertEquals(1.0F, camera0.getZ(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      long long0 = Camera.convertTimeToTimeZone((-547L), "r77n9y\u0003!");
      assertEquals(1392409281320L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Camera camera0 = new Camera(1.0F, 0.0F, 1.0F, (-1280.0F), 1.0F, 1.0F);
      camera0.getRenderer();
      assertEquals(1.0F, camera0.getZ(), 0.01F);
      assertEquals(1392409281320L, camera0.getTime());
      assertEquals(0.0F, camera0.getY(), 0.01F);
      assertEquals((-1280.0F), camera0.getYaw(), 0.01F);
      assertEquals(1.0F, camera0.getPitch(), 0.01F);
      assertEquals(1.0F, camera0.getFieldOfView(), 0.01F);
      assertEquals(1.0F, camera0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-427.33704F), (-427.33704F), (-427.33704F), (-427.33704F), (-427.33704F), (-427.33704F), (-1L), camera_Lens0);
      long long0 = camera0.getTime();
      assertEquals((-427.33704F), camera0.getFieldOfView(), 0.01F);
      assertEquals((-427.33704F), camera0.getPitch(), 0.01F);
      assertEquals((-427.33704F), camera0.getX(), 0.01F);
      assertEquals((-427.33704F), camera0.getYaw(), 0.01F);
      assertEquals((-427.33704F), camera0.getY(), 0.01F);
      assertEquals((-1L), long0);
      assertEquals((-427.33704F), camera0.getZ(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Camera camera0 = new Camera("Q", (-3249), (-3249), (-3249), (-3249), (-3249), (-3249));
      camera0.setCamera(camera0);
      assertEquals((-3249.0F), camera0.getZ(), 0.01F);
      assertEquals(1392409281320L, camera0.getTime());
      assertEquals((-3249.0F), camera0.getX(), 0.01F);
      assertEquals((-3249.0F), camera0.getPitch(), 0.01F);
      assertEquals((-3249.0F), camera0.getY(), 0.01F);
      assertEquals((-3249.0F), camera0.getFieldOfView(), 0.01F);
      assertEquals((-3249.0F), camera0.getYaw(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Camera camera0 = new Camera("", (-1.0F), (-1.0F), (-1.0F), (-7663.0F), (-7663.0F), (-2337.332F));
      camera0.getName();
      assertEquals((-7663.0F), camera0.getPitch(), 0.01F);
      assertEquals(1392409281320L, camera0.getTime());
      assertEquals((-1.0F), camera0.getX(), 0.01F);
      assertEquals((-1.0F), camera0.getY(), 0.01F);
      assertEquals((-7663.0F), camera0.getYaw(), 0.01F);
      assertEquals((-2337.332F), camera0.getFieldOfView(), 0.01F);
      assertEquals((-1.0F), camera0.getZ(), 0.01F);
  }
}
