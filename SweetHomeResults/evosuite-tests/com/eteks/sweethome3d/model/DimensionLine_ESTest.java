/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:30:16 GMT 2022
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.DimensionLine;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.TextStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DimensionLine_ESTest extends DimensionLine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, 0.0F, 1056.35F, 0.0F);
      boolean boolean0 = dimensionLine0.containsPoint(1056.35F, 0.0F, 0.0F);
      assertFalse(boolean0);
      
      dimensionLine0.intersectsRectangle((-472.98F), 0.0F, 0.0F, 0.0F);
      assertEquals(1056.35F, dimensionLine0.getYEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("com.eteks.sweethome3d.model.Level", 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      boolean boolean0 = dimensionLine0.isMiddlePointAt(0.0F, 5872.1353F, 3130.0F);
      assertEquals(0.0F, dimensionLine0.getYEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("", 1130.3995F, 1.0F, 0.0F, 1.0F, 0.0F);
      boolean boolean0 = dimensionLine0.isMiddlePointAt((-662.3F), 0.0F, 1594.0153F);
      assertEquals(1130.3995F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertTrue(boolean0);
      assertEquals(1130.3995F, dimensionLine0.getLength(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("`,bh}?rp<sf8c]d~R", 5047.568F, 5047.568F, 1906.718F, 1906.718F, (-1482.9F));
      boolean boolean0 = dimensionLine0.isMiddlePointAt(2.0F, 1906.718F, 970.7936F);
      assertEquals(4441.8325F, dimensionLine0.getLength(), 0.01F);
      assertEquals((-1482.9F), dimensionLine0.getOffset(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, (-1440.83F), (-1.0F), (-1440.83F));
      dimensionLine0.setLevel((Level) null);
      assertEquals((-1.0F), dimensionLine0.getYEnd(), 0.01F);
      assertEquals((-1440.83F), dimensionLine0.getXEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals((-1440.83F), dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("`,bh}?rp<sf8c]d~R", 5047.568F, 5047.568F, 1906.718F, 1906.718F, (-1482.9F));
      TextStyle textStyle0 = new TextStyle(1906.718F);
      dimensionLine0.setLengthStyle(textStyle0);
      assertEquals(4441.8325F, dimensionLine0.getLength(), 0.01F);
      assertEquals((-1482.9F), dimensionLine0.getOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("Gz'! @,RJYOmb9", (-1799.544F), (-407.25F), (-52.1111F), (-1799.544F), 2440.583F);
      dimensionLine0.setLengthStyle((TextStyle) null);
      assertEquals(2440.583F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(2234.2793F, dimensionLine0.getLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, (-1440.83F), (-1.0F), (-1440.83F));
      dimensionLine0.setOffset((-1.0F));
      assertEquals((-1.0F), dimensionLine0.getOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      dimensionLine0.setOffset(0.0F);
      assertEquals(0.0F, dimensionLine0.getYEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      dimensionLine0.move(0.0F, 0.0F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(2.0F, 2.0F, (-1330.8285F), 279.31055F, (-1330.8285F));
      Level level0 = new Level("&", "mo#ATB&#", (-750.5F), (-90.5269F), (-3521.4F));
      dimensionLine0.setLevel(level0);
      Level level1 = level0.clone();
      level1.setElevationIndex(2143206725);
      boolean boolean0 = dimensionLine0.isAtLevel(level1);
      assertTrue(boolean0);
      assertEquals(1361.3717F, dimensionLine0.getLength(), 0.01F);
      assertEquals((-1330.8285F), dimensionLine0.getOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(2.0F, 2.0F, (-1330.8285F), 279.31055F, (-1330.8285F));
      Level level0 = new Level("&", "mo#ATB&#", (-750.5F), (-90.5269F), (-3521.4F));
      dimensionLine0.setLevel(level0);
      Level level1 = new Level("", "", 863.952F, 0.0F, (-604.4321F));
      boolean boolean0 = dimensionLine0.isAtLevel(level1);
      assertFalse(boolean0);
      assertEquals((-1330.8285F), dimensionLine0.getOffset(), 0.01F);
      assertEquals(1361.3717F, dimensionLine0.getLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("Gz'! @,RJYOmb9", (-1799.544F), (-407.25F), (-52.1111F), (-1799.544F), 2440.583F);
      Level level0 = new Level("", "=q'w8MSKk3$9'\"K", (-1799.544F), (-52.1111F), 0.0F);
      dimensionLine0.setLevel(level0);
      boolean boolean0 = dimensionLine0.isAtLevel((Level) null);
      assertFalse(boolean0);
      assertEquals(2234.2793F, dimensionLine0.getLength(), 0.01F);
      assertEquals(2440.583F, dimensionLine0.getOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("", 1.0F, 1935.3275F, 0.0F, 1935.3275F, 1935.3275F);
      Level level0 = new Level("", "", 0.0F, 400.0805F, (-1129.35F));
      dimensionLine0.setLevel(level0);
      Level level1 = level0.clone();
      boolean boolean0 = dimensionLine0.isAtLevel(level1);
      assertFalse(boolean0);
      assertEquals(1.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals(1.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(1935.3275F, dimensionLine0.getOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("", 1.0F, 1935.3275F, 0.0F, 1935.3275F, 1935.3275F);
      Level level0 = new Level("", "", 0.0F, 400.0805F, (-1129.35F));
      boolean boolean0 = dimensionLine0.isAtLevel(level0);
      assertEquals(1.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(1935.3275F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(1.0F, dimensionLine0.getXStart(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("", 1.0F, 1935.3275F, 0.0F, 1935.3275F, 1935.3275F);
      Level level0 = new Level("", "", 0.0F, 400.0805F, (-1129.35F));
      dimensionLine0.setLevel(level0);
      boolean boolean0 = dimensionLine0.isAtLevel(level0);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(1.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals(1.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(1935.3275F, dimensionLine0.getOffset(), 0.01F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(2777.45F, 2777.45F, 2777.45F, 2777.45F, 0.0F);
      DimensionLine dimensionLine1 = dimensionLine0.clone();
      assertEquals(0.0F, dimensionLine1.getLength(), 0.01F);
      assertEquals(0.0F, dimensionLine1.getOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(2777.45F, 2777.45F, 2777.45F, 2777.45F, 0.0F);
      float[][] floatArray0 = dimensionLine0.getPoints();
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals(4, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("com.eteks.sweethome3d.model.Level", 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      dimensionLine0.getLevel();
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("", 1130.3995F, 1.0F, 0.0F, 1.0F, 0.0F);
      float float0 = dimensionLine0.getLength();
      assertEquals(1130.3995F, float0, 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(1130.3995F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(2777.45F, 2777.45F, 2777.45F, 2777.45F, 0.0F);
      dimensionLine0.move(2777.45F, 2777.45F);
      assertEquals(5554.9F, dimensionLine0.getXEnd(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine("", 1.0F, 1935.3275F, 0.0F, 1935.3275F, 1935.3275F);
      boolean boolean0 = dimensionLine0.containsStartExtensionLinetAt(0.0F, 1.0F, (-1692.0F));
      assertEquals(1.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(1935.3275F, dimensionLine0.getOffset(), 0.01F);
      assertFalse(boolean0);
      assertEquals(1.0F, dimensionLine0.getLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(2777.45F, 2777.45F, 2777.45F, 2777.45F, 0.0F);
      dimensionLine0.containsEndExtensionLineAt(0.0F, 0.0F, 673.395F);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, (-2565.1465F), (-2221.0F), 0.0F);
      dimensionLine0.getLengthStyle();
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
      assertEquals((-2221.0F), dimensionLine0.getYEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals((-2565.1465F), dimensionLine0.getXEnd(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(1.0F, 1.0F, 1.0F, 1.0F, 1.0F);
      float float0 = dimensionLine0.getOffset();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
  }
}
