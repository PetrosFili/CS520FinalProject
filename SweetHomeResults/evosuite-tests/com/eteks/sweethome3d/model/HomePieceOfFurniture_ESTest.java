/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:44:04 GMT 2022
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.CatalogLight;
import com.eteks.sweethome3d.model.CatalogPieceOfFurniture;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeDoorOrWindow;
import com.eteks.sweethome3d.model.HomeFurnitureGroup;
import com.eteks.sweethome3d.model.HomeLight;
import com.eteks.sweethome3d.model.HomeMaterial;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.LightSource;
import com.eteks.sweethome3d.model.Sash;
import com.eteks.sweethome3d.model.TextStyle;
import com.eteks.sweethome3d.model.Transformation;
import com.eteks.sweethome3d.model.Wall;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.SimpleURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.net.URL;
import java.util.Comparator;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomePieceOfFurniture_ESTest extends HomePieceOfFurniture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      // Undeclared exception!
      try { 
        homeLight0.setModelMirrored(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isPointAt(0L, 0L, 2294.5195F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(boolean0);
      assertEquals(0.0F, homeLight0.getWidthInPlan(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepthInPlan(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isPointAt(0L, 0L, (-855L));
      assertEquals(0.0F, homeLight0.getWidthInPlan(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepthInPlan(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isPointAt(0, (-670.0F), 195.279F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(97.6395F, homeLight0.getX(), 0.01F);
      assertFalse(boolean0);
      assertEquals(195.279F, homeLight0.getDepthInPlan(), 0.01F);
      assertEquals(195.279F, homeLight0.getWidthInPlan(), 0.01F);
      assertEquals(97.6395F, homeLight0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[10];
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "sJk^r$|ND4{ZDJ-D<", "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 936.81604F, 936.81604F, 2.0F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      boolean boolean0 = homeLight0.isBottomLeftPointAt(1.9363544F, 1165.0F, Float.NEGATIVE_INFINITY);
      assertEquals(0.297837F, homeLight0.getX(), 0.01F);
      assertEquals(936.81604F, homeLight0.getDepthInPlan(), 0.01F);
      assertEquals(0.595674F, homeLight0.getWidthInPlan(), 0.01F);
      assertFalse(boolean0);
      assertEquals(468.40802F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 897.1426F, 897.1426F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      boolean boolean0 = homeLight0.isBottomLeftPointAt(0.0F, (-706.0F), (-2795.8042F));
      assertFalse(boolean0);
      assertEquals(0.297837F, homeLight0.getX(), 0.01F);
      assertEquals(0.595674F, homeLight0.getWidthInPlan(), 0.01F);
      assertEquals(897.1426F, homeLight0.getDepthInPlan(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(448.5713F, homeLight0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "sJk^r$|ND4{ZDJ-D<", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isBottomLeftPointAt((-2721.7466F), Float.NEGATIVE_INFINITY, 5.1287208F);
      assertEquals(0.0F, homeLight0.getWidthInPlan(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepthInPlan(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", true, false, false, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Transformation[] transformationArray0 = new Transformation[6];
      homeLight0.setModelTransformations(transformationArray0);
      assertTrue(homeLight0.isHorizontallyRotatable());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-1894));
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, (String) null, true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Transformation[] transformationArray0 = new Transformation[0];
      homeLight0.setModelTransformations(transformationArray0);
      assertEquals(195.279F, homeLight0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "sJk^r$|ND4{ZDJ-D<", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setModelTransformations((Transformation[]) null);
      assertEquals(0.0F, homeLight0.getWidthInPlan(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "sJk^r$|ND4{ZDJ-D<", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setPitch(0.0F);
      assertEquals(0.0F, homeLight0.getPitch(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "sJk^r$|ND4{ZDJ-D<", false, false, false, (BigDecimal) null, (BigDecimal) null, "sJk^r$|ND4{ZDJ-D<");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setPitch(258.6112F);
      assertEquals(1.0006084F, homeLight0.getPitch(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[5];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("7000-", (String) null, "7000-", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "S/___a^hbLv$R#|", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setInformation("c@5");
      assertEquals(195.279F, homeLight0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setShininess((Float) null);
      assertEquals(97.6395F, homeLight0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      Float float0 = new Float((double) 1165.0F);
      homeLight0.setShininess(float0);
      assertFalse(homeLight0.isNameVisible());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String[] stringArray0 = new String[9];
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      LightSource[] lightSourceArray0 = new LightSource[1];
      Long long0 = new Long(0);
      Float float0 = new Float(928.53F);
      CatalogLight catalogLight0 = new CatalogLight("}2)7XNuK", "zX\u0005gaESantBI=", "SHININESS", "MpuDA9}Wc.", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0, 2294.5195F, Float.NEGATIVE_INFINITY, 928.53F, 0.0F, false, lightSourceArray0, "com.eteks.sweethome3d.model.HomePieceOfFurniture$Property", (float[][]) null, true, long0, (String) null, false, true, false, true, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight("", catalogLight0);
      // Undeclared exception!
      try { 
        homeLight0.setShininess((Float) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, true, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setNameAngle(195.279F);
      assertEquals(0.50026244F, homeLight0.getNameAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Level level0 = new Level("^mkA\"GlW:D}IV", "VISIBLE", (-1401.914F), 751.0169F, 0);
      homeLight0.setLevel(level0);
      assertEquals((-1206.6349F), homeLight0.getGroundElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "sJk^r$|ND4{ZDJ-D<", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", true, true, true, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setLevel((Level) null);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Wall wall0 = new Wall(195.279F, 0.1F, 0.1F, 1.0F, 195.279F);
      boolean boolean0 = homeLight0.isParallelToWall(wall0);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      Wall wall0 = new Wall("`Kbh,", 3175.77F, 0.5F, 2885.0F, 0.5F, 2.0F, (-2795.8042F));
      boolean boolean0 = homeLight0.isParallelToWall(wall0);
      assertTrue(boolean0);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "^TzX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, true, true, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      CatalogTexture catalogTexture0 = new CatalogTexture("k4<N9", "#<v3sGxB}HT", resourceURLContent0, (-1720.7F), 1.0F, "^TzX\u0005gaESantBI=");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0, 476.24F, true);
      Wall wall0 = new Wall(0L, 0L, 0.0F, (-670.0F), 0.0F, (-670.0F), homeTexture0);
      boolean boolean0 = homeLight0.isParallelToWall(wall0);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      SimpleURLContent simpleURLContent0 = new SimpleURLContent(uRL0);
      Sash[] sashArray0 = new Sash[3];
      Integer integer0 = new Integer((-237));
      float[][] floatArray0 = new float[4][5];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow(":j\"a.CP", simpleURLContent0, simpleURLContent0, 185.59338F, 185.59338F, 0.3926991F, 0.3926991F, false, 0.3926991F, 0.3926991F, sashArray0, integer0, floatArray0, false, 1544.523F, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      boolean boolean0 = homeDoorOrWindow0.isTopRightPointAt(0.01F, 2.0F, (-2011.6F));
      assertEquals(92.79669F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(185.59338F, homeDoorOrWindow0.getDepthInPlan(), 0.01F);
      assertFalse(boolean0);
      assertEquals(185.59338F, homeDoorOrWindow0.getWidthInPlan(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-1894));
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, (String) null, true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isTopRightPointAt(195.279F, 1.0F, 97.6395F);
      assertTrue(boolean0);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-1894));
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, (String) null, true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isTopRightPointAt((-1685.818F), 1.0F, 97.6395F);
      assertEquals(195.279F, homeLight0.getDepthInPlan(), 0.01F);
      assertFalse(boolean0);
      assertEquals(97.6395F, homeLight0.getY(), 0.01F);
      assertEquals(97.6395F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(195.279F, homeLight0.getWidthInPlan(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("(UrX3>", (Content) null, (Content) null, 2037.5033F, 30.164412F, Float.NEGATIVE_INFINITY, 30.164412F, true, "(UrX3>", (Integer) null, (float[][]) null, true, 2037.5033F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      boolean boolean0 = homePieceOfFurniture0.isHorizontallyRotated();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setRoll((-1.0F));
      boolean boolean0 = homeLight0.isHorizontallyRotated();
      assertEquals(5.2831855F, homeLight0.getRoll(), 0.01F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", true, false, false, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      BigDecimal bigDecimal0 = homeLight0.getValueAddedTax();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, true, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation(4532.846F);
      assertEquals(4532.846F, homeLight0.getElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[15];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, (String) null, false, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isTopLeftPointAt(0.0F, 1.0F, (-1401.914F));
      assertTrue(boolean0);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isTopLeftPointAt(1554.0F, (-670.0F), (-3261));
      assertEquals(97.6395F, homeLight0.getY(), 0.01F);
      assertEquals(97.6395F, homeLight0.getX(), 0.01F);
      assertEquals(195.279F, homeLight0.getDepthInPlan(), 0.01F);
      assertFalse(boolean0);
      assertEquals(195.279F, homeLight0.getWidthInPlan(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[15];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, (String) null, true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isTopLeftPointAt(0.0F, 131.8429F, (-1401.914F));
      assertEquals(195.279F, homeLight0.getDepthInPlan(), 0.01F);
      assertFalse(boolean0);
      assertEquals(97.6395F, homeLight0.getX(), 0.01F);
      assertEquals(97.6395F, homeLight0.getY(), 0.01F);
      assertEquals(195.279F, homeLight0.getWidthInPlan(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[5];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("7000-", (String) null, "7000-", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "S/___a^hbLv$R#|", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isTopLeftPointAt(1259.9225F, (-670.0F), (-1401.914F));
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(boolean0);
      assertEquals(195.279F, homeLight0.getWidthInPlan(), 0.01F);
      assertEquals(195.279F, homeLight0.getDepthInPlan(), 0.01F);
      assertEquals(97.6395F, homeLight0.getX(), 0.01F);
      assertEquals(97.6395F, homeLight0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "sJk^r$|ND4{ZDJ-D<", false, false, false, (BigDecimal) null, (BigDecimal) null, "sJk^r$|ND4{ZDJ-D<");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setStaircaseCutOutShape((String) null);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setStaircaseCutOutShape("com.eteks.sweethome3d.model.Sash");
      assertEquals("com.eteks.sweethome3d.model.Sash", homeLight0.getStaircaseCutOutShape());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "lI[&BL^E", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setStaircaseCutOutShape("lI[&BL^E");
      assertEquals(0.0F, homeLight0.getRoll(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      Integer integer0 = new Integer(800);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("MOVABLE", resourceURLContent0, resourceURLContent0, 2294.5195F, 0L, (-1.0F), 5.1287208F, false, "w 00UZ-6>%)^g>tW0", integer0, (float[][]) null, true, long0, "%@;LFj4KVJ+rI*4;+", 800, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setName(stringArray0[6]);
      assertTrue(homePieceOfFurniture0.isHorizontallyRotatable());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Long long0 = new Long(5L);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      Integer integer0 = new Integer(0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("MzIV*<m@T", resourceURLContent0, resourceURLContent0, Float.NEGATIVE_INFINITY, Float.NEGATIVE_INFINITY, 5L, 2294.5195F, false, "n9", integer0, (float[][]) null, true, long0, "INFORMATION", (-2285.8333F), true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture("", catalogPieceOfFurniture0);
      homePieceOfFurniture0.setY(Float.NEGATIVE_INFINITY);
      assertEquals("MzIV*<m@T", homePieceOfFurniture0.getName());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      homeLight0.setMovable(true);
      assertTrue(homeLight0.isMovable());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setCurrency((String) null);
      assertFalse(homeLight0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setCurrency(":j\"a.P");
      assertEquals(":j\"a.P", homeLight0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[10];
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 936.81604F, 936.81604F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      homeLight0.setCurrency((String) null);
      assertEquals(1.977125F, homeLight0.getElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setNameYOffset((-1348.8698F));
      assertEquals((-1348.8698F), homeLight0.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      TextStyle textStyle0 = new TextStyle("SHININESS", 1.0F, false, true);
      homeLight0.setNameStyle(textStyle0);
      assertEquals(0.0F, homeLight0.getRoll(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isBottomRightPointAt((-195.179F), 2530.4F, 2528.0F);
      assertEquals(97.6395F, homeLight0.getY(), 0.01F);
      assertEquals(97.6395F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(195.279F, homeLight0.getDepthInPlan(), 0.01F);
      assertFalse(boolean0);
      assertEquals(195.279F, homeLight0.getWidthInPlan(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("(UrX3>", (Content) null, (Content) null, 2037.5033F, 30.164412F, Float.NEGATIVE_INFINITY, 30.164412F, true, "(UrX3>", (Integer) null, (float[][]) null, true, 2037.5033F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      boolean boolean0 = homePieceOfFurniture0.isBottomRightPointAt(2037.5033F, 30.164412F, 261.92587F);
      assertTrue(boolean0);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(15.082206F, homePieceOfFurniture0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isBottomRightPointAt(0, Float.NEGATIVE_INFINITY, (-2373.0F));
      assertEquals(0.0F, homeLight0.getWidthInPlan(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepthInPlan(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("(UrX3>", (Content) null, (Content) null, 2037.5033F, 30.164412F, Float.NEGATIVE_INFINITY, 30.164412F, true, "(UrX3>", (Integer) null, (float[][]) null, true, 2037.5033F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      // Undeclared exception!
      try { 
        homePieceOfFurniture0.setModelRotation((float[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.CatalogPieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-1894));
      CatalogLight catalogLight0 = new CatalogLight("lI[BLE", (String) null, "lI[BLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, (String) null, true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setVisible(false);
      assertFalse(homeLight0.isVisible());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("(UrX3>", (Content) null, (Content) null, 2037.5033F, 30.164412F, Float.NEGATIVE_INFINITY, 30.164412F, true, "(UrX3>", (Integer) null, (float[][]) null, true, 2037.5033F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setHeightInPlan(Float.NEGATIVE_INFINITY);
      assertTrue(homePieceOfFurniture0.isMovable());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      URLContent uRLContent0 = new URLContent((URL) null);
      homeLight0.setPlanIcon(uRLContent0);
      assertFalse(homeLight0.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      Integer integer0 = Integer.getInteger("c@5", (-873));
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("VIS0B:E", simpleURLContent0, simpleURLContent0, (-2512.382F), 2294.5195F, 936.81604F, (-1414.19F), true, integer0, (float[][]) null, true, (-1.0F), false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture("-i^vE=j8GRAgI", catalogPieceOfFurniture0);
      homePieceOfFurniture0.setPlanIcon(simpleURLContent0);
      assertEquals(1147.2598F, homePieceOfFurniture0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      String[] stringArray0 = new String[6];
      Long long0 = new Long(0L);
      Float float0 = new Float((-899.64996F));
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      Sash[] sashArray0 = new Sash[6];
      BigDecimal bigDecimal0 = new BigDecimal(761);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("com.eteks.sweethome3d.model.HomePieceOfFurniture$13", "com.eteks.sweethome3d.model.HomePieceOfFurniture$13", "com.eteks.sweethome3d.model.HomePieceOfFurniture$13", (String) null, stringArray0, long0, float0, simpleURLContent0, simpleURLContent0, simpleURLContent0, 0L, (-899.64996F), (-670.0F), 0L, (-1.0F), true, (String) null, (-450.8254F), 2411.8F, true, true, sashArray0, (float[][]) null, true, long0, "com.eteks.sweethome3d.model.HomePieceOfFurniture$13", true, false, false, bigDecimal0, bigDecimal0, "Linux");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getPitch(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getRoll(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup("com.eteks.sweethome3d.model.HomePieceOfFurniture$13", linkedList0, (-899.64996F), false, "com.eteks.sweethome3d.model.HomePieceOfFurniture$13");
      homeFurnitureGroup0.setMovable(false);
      assertEquals(5.1287208F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getHeightInPlan(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepthInPlan(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[10];
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "sJk^r$|ND4{ZDJ-D<", "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 936.81604F, 936.81604F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      homeLight0.setModel((Content) null);
      assertEquals(468.40802F, homeLight0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("(UrX3>", (Content) null, (Content) null, 2037.5033F, 30.164412F, Float.NEGATIVE_INFINITY, 30.164412F, true, "(UrX3>", (Integer) null, (float[][]) null, true, 2037.5033F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      BigDecimal bigDecimal0 = new BigDecimal(261.92587F);
      homePieceOfFurniture0.setPrice(bigDecimal0);
      BigDecimal bigDecimal1 = homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      assertEquals((byte)5, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[15];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, (String) null, true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      BigDecimal bigDecimal1 = homeLight0.getPriceValueAddedTaxIncluded();
      assertEquals((byte) (-52), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", true, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      BigDecimal bigDecimal0 = homeLight0.getPriceValueAddedTaxIncluded();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-1894));
      CatalogLight catalogLight0 = new CatalogLight("lI[BLE", (String) null, "lI[BLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, (String) null, true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      float float0 = homeLight0.getGroundElevation();
      assertEquals(195.279F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "#<v3sGxB}HT", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      homeLight0.setHeight(912.6F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      // Undeclared exception!
      try { 
        homeLight0.setHeight((-3028.8245F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      Sash[] sashArray0 = new Sash[1];
      Integer integer0 = new Integer((-3261));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("VISIBLE", simpleURLContent0, simpleURLContent0, 2.0F, 0.0F, (-1402.9482F), (-3261), true, 195.279F, 2294.5195F, sashArray0, integer0, (float[][]) null, true, 2294.5195F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogDoorOrWindow0);
      homePieceOfFurniture0.setBackFaceShown(false);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setBackFaceShown(true);
      assertTrue(homeLight0.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setBackFaceShown(false);
      assertNull(homeLight0.getInformation());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "sJk^r$|ND4{ZDJ-D<", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 912.6F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      byte[] byteArray0 = new byte[3];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal1 = new BigDecimal(bigInteger0);
      homeLight0.setValueAddedTaxPercentage(bigDecimal1);
      assertTrue(homeLight0.isModelCenteredAtOrigin());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setValueAddedTaxPercentage(bigDecimal0);
      assertNull(homeLight0.getName());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      HomeMaterial[] homeMaterialArray0 = new HomeMaterial[1];
      homeLight0.setModelMaterials(homeMaterialArray0);
      HomeMaterial[] homeMaterialArray1 = homeLight0.getModelMaterials();
      assertNotSame(homeMaterialArray1, homeMaterialArray0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[15];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, (String) null, true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setCatalogId("Y-dId@MU");
      assertEquals("Y-dId@MU", homeLight0.getCatalogId());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      homeLight0.setCatalogId("#<v3sGxB}HT");
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", true, false, false, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setNameVisible(true);
      homeLight0.setNameVisible(false);
      assertFalse(homeLight0.isTexturable());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, "zX\u0005gaESantBI=", (float[][]) null, "YNcO9,eOo4", false, true, true, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setNameXOffset((-2176.333F));
      assertEquals((-2176.333F), homeLight0.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      LightSource[] lightSourceArray0 = new LightSource[1];
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      CatalogLight catalogLight0 = new CatalogLight("", "ltQ @q", (String) null, resourceURLContent0, resourceURLContent0, resourceURLContent0, 2294.5195F, Float.NEGATIVE_INFINITY, (-1.0F), 2707.5427F, true, lightSourceArray0, (float[][]) null, "", false, false, true, bigDecimal0, (BigDecimal) null);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture("STAIRCASE_CUT_OUT_SHAPE", catalogLight0);
      // Undeclared exception!
      try { 
        homePieceOfFurniture0.setDepth((-242.62653F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, "zX\u0005gaESantBI=", (float[][]) null, "YNcO9,eOo4", false, true, true, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setTexture((HomeTexture) null);
      assertTrue(homeLight0.isMovable());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 918.74884F, 918.74884F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      CatalogTexture catalogTexture0 = new CatalogTexture("sJk^r$|ND4{ZDJ-D<", (Content) null, 124, 3175.77F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0, 1.977125F, true);
      homeLight0.setTexture(homeTexture0);
      assertNull(homeLight0.getColor());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "zX\u0005gaESantBI=", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      // Undeclared exception!
      try { 
        homeLight0.setTexture((HomeTexture) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setRoll(0L);
      assertEquals(0.0F, homeLight0.getRoll(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[10];
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "sJk^r$|ND4{ZDJ-D<", "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 936.81604F, 936.81604F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      homeLight0.setIcon(temporaryURLContent0);
      assertTrue(homeLight0.isTexturable());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-1894));
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, (String) null, true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setIcon(simpleURLContent0);
      assertEquals("light-00000000-0100-4000-8200-000003000000", homeLight0.getId());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 3.6889813F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setPrice((BigDecimal) null);
      assertEquals(195.279F, homeLight0.getGroundElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[5];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("7000-", (String) null, "7000-", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "S/___a^hbLv$R#|", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setPrice(bigDecimal0);
      assertFalse(homeLight0.isWidthDepthDeformable());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[10];
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 936.81604F, 936.81604F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      HomeMaterial[] homeMaterialArray0 = new HomeMaterial[1];
      homeLight0.setModelMaterials(homeMaterialArray0);
      homeLight0.setModelMaterials(homeMaterialArray0);
      assertEquals(0.0F, homeLight0.getRoll(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeMaterial[] homeMaterialArray0 = new HomeMaterial[5];
      // Undeclared exception!
      try { 
        homeLight0.setModelMaterials(homeMaterialArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      homeLight0.setDepthInPlan(912.6F);
      assertEquals("R)m", homeLight0.getDescription());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("lI[&BL^E", (String) null, "lI[&BL^E", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isAtLevel((Level) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Level level0 = new Level("MODEL_ROTATION", ">'CElX9i)@u", 1.0F, (-3737.0F), (-3261));
      boolean boolean0 = homeLight0.isAtLevel(level0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      String[] stringArray0 = new String[1];
      Long long0 = new Long((-3261));
      Float float0 = new Float(0.1F);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      Sash[] sashArray0 = new Sash[0];
      float[][] floatArray0 = new float[8][0];
      float[] floatArray1 = new float[5];
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray1;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("8Eh}/$p#l", (String) null, "", "MODEL_ROTATION", stringArray0, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3261), 0.1F, 0.1F, 193.6061F, 2343.0F, true, (String) null, 4532.846F, (-1401.914F), sashArray0, floatArray0, "Ye.{X]{HK5)Ex)=", true, true, true, bigDecimal0, bigDecimal0, " ");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(0.1F, homeDoorOrWindow0.getDepthInPlan(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "MODEL_ROTATION");
      HomeFurnitureGroup homeFurnitureGroup1 = new HomeFurnitureGroup("MODEL_ROTATION", linkedList0, (-1401.914F), true, "VISIBLE");
      assertEquals(2342.857F, homeFurnitureGroup1.getDropOnTopElevation(), 0.01F);
      assertEquals(5.5195684F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.1000061F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepthInPlan(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidthInPlan(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "sJk^r$|ND4{ZDJ-D<", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 912.6F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      homeLight0.setDescription("VIS0B:E");
      assertEquals("VIS0B:E", homeLight0.getDescription());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      homeLight0.setDescription("R)m");
      assertNull(homeLight0.getInformation());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) 124);
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 918.74884F, 918.74884F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      homeLight0.containsPoint(1165.0F, 918.74884F, 2.0F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(918.74884F, homeLight0.getDepthInPlan(), 0.01F);
      assertEquals(0.595674F, homeLight0.getWidthInPlan(), 0.01F);
      assertEquals(0.297837F, homeLight0.getX(), 0.01F);
      assertEquals(459.37442F, homeLight0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Long long0 = new Long(0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      Integer integer0 = new Integer(0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("MzIV*<m@T", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0L, 2294.5195F, false, "Piece isn't resizable", integer0, (float[][]) null, true, long0, "INFORMATION", (-2285.8333F), true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture("qy", catalogPieceOfFurniture0);
      Integer integer1 = new Integer(0);
      homePieceOfFurniture0.setColor(integer1);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Long long0 = new Long(5L);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      Integer integer0 = new Integer(0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("MzIV*<m@T", resourceURLContent0, resourceURLContent0, Float.NEGATIVE_INFINITY, Float.NEGATIVE_INFINITY, 5L, 2294.5195F, false, "n9", integer0, (float[][]) null, true, long0, "INFORMATION", (-2285.8333F), true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture("", catalogPieceOfFurniture0);
      Integer integer1 = new Integer((-1952257859));
      homePieceOfFurniture0.setColor(integer1);
      assertEquals((-1952257859), (int)homePieceOfFurniture0.getColor());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer integer0 = new Integer((-2738));
      // Undeclared exception!
      try { 
        homeLight0.setColor(integer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[8];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isNameCenterPointAt(1.977125F, 195.279F, 2411.8F);
      assertTrue(boolean0);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(97.6395F, homeLight0.getX(), 0.01F);
      assertEquals(97.6395F, homeLight0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[10];
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "sJk^r$|ND4{ZDJ-D<", "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 936.81604F, 936.81604F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      boolean boolean0 = homeLight0.isNameCenterPointAt(0.595674F, 0.595674F, 1.9363544F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(boolean0);
      assertEquals(468.40802F, homeLight0.getY(), 0.01F);
      assertEquals(0.297837F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[15];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, (String) null, true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isNameCenterPointAt(2902.2322F, (-2176.333F), 195.279F);
      assertFalse(boolean0);
      assertEquals(97.6395F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "sJk^r$|ND4{ZDJ-D<", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", true, true, true, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setCreator("a~[(@u");
      assertEquals("a~[(@u", homeLight0.getCreator());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      String[] stringArray0 = new String[6];
      Long long0 = new Long(0L);
      Float float0 = new Float((-753.461F));
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      Sash[] sashArray0 = new Sash[6];
      BigDecimal bigDecimal0 = new BigDecimal(761);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("com.eteks.sweethome3d.model.HomePieceOfFurniture$13", "com.eteks.sweethome3d.model.HomePieceOfFurniture$13", "com.eteks.sweethome3d.model.HomePieceOfFurniture$13", (String) null, stringArray0, long0, float0, simpleURLContent0, simpleURLContent0, simpleURLContent0, (-753.461F), (-899.64996F), (-670.0F), (-753.461F), (-1.0F), true, (String) null, (-450.8254F), 2411.8F, true, true, sashArray0, (float[][]) null, true, long0, stringArray0[1], true, false, false, bigDecimal0, bigDecimal0, "Linux");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-670.0F), homeDoorOrWindow0.getHeightInPlan(), 0.01F);
      assertEquals((-753.461F), homeDoorOrWindow0.getWidthInPlan(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getRoll(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup("com.eteks.sweethome3d.model.HomePieceOfFurniture$13", linkedList0, (-899.64996F), false, "com.eteks.sweethome3d.model.HomePieceOfFurniture$13");
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(5.1287208F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-753.461F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      CatalogLight catalogLight0 = new CatalogLight("#<v3sGxB}HT", (String) null, "R)m", (Content) null, (Content) null, (Content) null, 0.595674F, 912.6F, 912.6F, 1.977125F, false, lightSourceArray0, (float[][]) null, "sJk^r$|ND4{ZDJ-D<", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("sJk^r$|ND4{ZDJ-D<", catalogLight0);
      homeLight0.setModelSize((Long) null);
      assertFalse(homeLight0.isModelMirrored());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLE", (String) null, "VISIBLE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "c@5", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setModelCenteredAtOrigin(false);
      assertFalse(homeLight0.isModelCenteredAtOrigin());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      String[] stringArray0 = new String[1];
      Long long0 = new Long((-3261));
      Float float0 = new Float(0.1F);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      Sash[] sashArray0 = new Sash[0];
      float[][] floatArray0 = new float[8][0];
      float[] floatArray1 = new float[5];
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray0[0];
      floatArray0[2] = floatArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("8Eh}/$p#l", (String) null, "", "MODEL_ROTATION", stringArray0, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3261), 0.1F, 0.1F, 193.6061F, 2343.0F, true, (String) null, 4532.846F, (-1401.914F), sashArray0, floatArray0, "Ye.{X]{HK5)Ex)=", true, true, true, bigDecimal0, bigDecimal0, " ");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "MODEL_ROTATION");
      // Undeclared exception!
      try { 
        homeFurnitureGroup0.setRoll(4532.846F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece can't be rotated around an horizontal axis
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Long long0 = new Long(5L);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      Integer integer0 = new Integer(0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("MzIV*<m@T", resourceURLContent0, resourceURLContent0, Float.NEGATIVE_INFINITY, Float.NEGATIVE_INFINITY, 5L, 2294.5195F, false, "n9", integer0, (float[][]) null, true, long0, "INFORMATION", (-2285.8333F), true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture("", catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = new HomePieceOfFurniture(homePieceOfFurniture0);
      assertEquals(Float.NEGATIVE_INFINITY, homePieceOfFurniture0.getDepthInPlan(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getRoll(), 0.01F);
      assertEquals(Float.NEGATIVE_INFINITY, homePieceOfFurniture0.getWidthInPlan(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(2294.5195F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDropOnTopElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getPitch(), 0.01F);
      assertEquals(5.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(5.0F, homePieceOfFurniture0.getHeightInPlan(), 0.01F);
      assertEquals(Float.NEGATIVE_INFINITY, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(Float.NEGATIVE_INFINITY, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(Float.NEGATIVE_INFINITY, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(Float.NEGATIVE_INFINITY, homePieceOfFurniture0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      SimpleURLContent simpleURLContent0 = new SimpleURLContent((URL) null);
      LightSource[] lightSourceArray0 = new LightSource[14];
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3261));
      CatalogLight catalogLight0 = new CatalogLight("VISIBLtE", (String) null, "VISIBLtE", simpleURLContent0, simpleURLContent0, simpleURLContent0, 195.279F, 195.279F, 0.1F, 195.279F, true, lightSourceArray0, "SHININESS", (float[][]) null, "dlX^jT^16;a", true, false, true, bigDecimal0, bigDecimal0, "MODEL_ROTATION");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.intersectsRectangle(195.279F, (-670.0F), 2294.5195F, 1.9363544F);
      assertFalse(boolean0);
      assertEquals(97.6395F, homeLight0.getX(), 0.01F);
      assertEquals(195.279F, homeLight0.getDepthInPlan(), 0.01F);
      assertEquals(97.6395F, homeLight0.getY(), 0.01F);
      assertEquals(195.279F, homeLight0.getWidthInPlan(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", (String) null, stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.move(0.0F, (-1571.0F));
      assertEquals((-1571.0F), homeLight0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      Sash[] sashArray0 = new Sash[8];
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("10.7", "@g'sTRL+(DrKu;0/", "10.7", uRLContent0, uRLContent0, 2294.5195F, 2294.5195F, 1648.0F, 2294.5195F, false, 2294.5195F, (-479.49625F), sashArray0, (float[][]) null, "@g'sTRL+(DrKu;0/", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow("@g'sTRL+(DrKu;0/", catalogDoorOrWindow0);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.scale(0.5F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((double) 0L);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("sJk^r$|ND4{ZDJ-D<", "zX\u0005gaESantBI=", "", "sJk^r$|ND4{ZDJ-D<", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, "|F%=3b", (float[][]) null, "YNcO9,eOo4", false, false, false, (BigDecimal) null, (BigDecimal) null, stringArray0[6]);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      boolean boolean0 = homeLight0.isWidthDepthDeformable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      Comparator<HomePieceOfFurniture> comparator0 = HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      assertNotNull(comparator0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[9];
      float[][] floatArray0 = new float[9][9];
      BigDecimal bigDecimal0 = new BigDecimal((-1.0F));
      CatalogLight catalogLight0 = new CatalogLight("Cl+^wlF\"4Q)ZNa\"g}~", "\"`F", "Cl+^wlF\"4Q)ZNa\"g}~", (Content) null, (Content) null, (Content) null, (-2535.6995F), (-2535.6995F), (-620.0F), (-620.0F), true, lightSourceArray0, floatArray0, "", true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight("java.version", catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      assertNull(homeLight1.getCurrency());
  }
}
