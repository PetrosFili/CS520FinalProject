/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:48:34 GMT 2022
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.LengthUnit;
import java.text.Format;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LengthUnit_ESTest extends LengthUnit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      String string0 = lengthUnit0.getName();
      assertEquals("inch", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      float float0 = lengthUnit0.getMinimumLength();
      assertEquals(0.3175F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      float float0 = lengthUnit0.centimeterToUnit(1574.2737F);
      assertEquals(619.7928F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      float float0 = lengthUnit0.unitToCentimeter((-2552.857F));
      assertEquals((-6484.2563F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      float float0 = lengthUnit0.getMaximumLength();
      assertEquals(253934.97F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      Format format0 = lengthUnit0.getAreaFormatWithUnit();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      Format format0 = lengthUnit0.getFormatWithUnit();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      Format format0 = lengthUnit0.getFormat();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH;
      String string0 = lengthUnit0.getName();
      assertEquals("inch", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.valueOf("INCH");
      Format format0 = lengthUnit0.getAreaFormatWithUnit();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.valueOf("INCH");
      Format format0 = lengthUnit0.getFormat();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH;
      float float0 = lengthUnit0.unitToCentimeter(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH;
      float float0 = lengthUnit0.centimeterToUnit(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.valueOf("INCH");
      float float0 = lengthUnit0.getMinimumLength();
      assertEquals(0.3175F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH;
      float float0 = lengthUnit0.getMagnetizedLength(0.0F, 1482.2406F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.METER;
      Format format0 = lengthUnit0.getAreaFormatWithUnit();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.METER;
      float float0 = lengthUnit0.centimeterToUnit(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.METER;
      float float0 = lengthUnit0.unitToCentimeter((-1848.8965F));
      assertEquals((-184889.66F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.METER;
      float float0 = lengthUnit0.getMinimumLength();
      assertEquals(0.1F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.METER;
      Format format0 = lengthUnit0.getFormatWithUnit();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.METER;
      float float0 = lengthUnit0.getMaximumElevation();
      assertEquals(10000.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.METER;
      String string0 = lengthUnit0.getName();
      assertEquals("m", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.METER;
      Format format0 = lengthUnit0.getFormat();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.CENTIMETER;
      float float0 = lengthUnit0.unitToCentimeter(5.0F);
      assertEquals(5.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.CENTIMETER;
      float float0 = lengthUnit0.centimeterToUnit((-807.057F));
      assertEquals((-807.057F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.CENTIMETER;
      float float0 = lengthUnit0.getMinimumLength();
      assertEquals(0.1F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.CENTIMETER;
      Format format0 = lengthUnit0.getAreaFormatWithUnit();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.CENTIMETER;
      Format format0 = lengthUnit0.getFormat();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.CENTIMETER;
      Format format0 = lengthUnit0.getFormatWithUnit();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.CENTIMETER;
      float float0 = lengthUnit0.getMaximumLength();
      assertEquals(100000.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.CENTIMETER;
      String string0 = lengthUnit0.getName();
      assertEquals("cm", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.METER;
      float float0 = lengthUnit0.getMagnetizedLength(0.1F, 0.1F);
      assertEquals(0.1F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.CENTIMETER;
      float float0 = lengthUnit0.getMagnetizedLength(1795.2584F, 1.0F);
      assertEquals(1795.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.CENTIMETER;
      float float0 = lengthUnit0.getMagnetizedLength((-1.0F), 3.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.METER;
      float float0 = lengthUnit0.getMagnetizedLength(0.1F, 10.0F);
      assertEquals(0.1F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.MILLIMETER;
      float float0 = lengthUnit0.getMagnetizedLength(0.0F, 96.49289F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      float float0 = lengthUnit0.getMagnetizedLength(5.0F, 3120.0F);
      assertEquals(5.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      float float0 = lengthUnit0.getMagnetizedLength(0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      float float0 = lengthUnit0.getMagnetizedLength(0.47736052F, 0.47736052F);
      assertEquals(0.635F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      float float0 = lengthUnit0.getMagnetizedLength(392.84943F, 3.0F);
      assertEquals(393.69998F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      float float0 = lengthUnit0.getMagnetizedLength(253928.88F, 6.0F);
      assertEquals(253928.88F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.INCH_DECIMALS;
      float float0 = lengthUnit0.getMagnetizedLength(1.0F, 1.0F);
      assertEquals(1.27F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      float float0 = LengthUnit.footToCentimeter(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.valueOf("INCH");
      float float0 = lengthUnit0.getMaximumElevation();
      assertEquals(25393.496F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      float float0 = LengthUnit.centimeterToFoot((-1182.1599F));
      assertEquals((-38.784775F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.MILLIMETER;
      float float0 = lengthUnit0.unitToCentimeter(1.0F);
      assertEquals(0.1F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.MILLIMETER;
      float float0 = lengthUnit0.getMaximumLength();
      assertEquals(100000.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.MILLIMETER;
      float float0 = lengthUnit0.centimeterToUnit((-2026.561F));
      assertEquals((-20265.61F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.MILLIMETER;
      Format format0 = lengthUnit0.getAreaFormatWithUnit();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.MILLIMETER;
      Format format0 = lengthUnit0.getFormatWithUnit();
      assertNotNull(format0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.MILLIMETER;
      float float0 = lengthUnit0.getMinimumLength();
      assertEquals(0.1F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.MILLIMETER;
      String string0 = lengthUnit0.getName();
      assertEquals("mm", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.MILLIMETER;
      float float0 = lengthUnit0.getMagnetizedLength(8.0F, 0.5F);
      assertEquals(8.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LengthUnit lengthUnit0 = LengthUnit.MILLIMETER;
      Format format0 = lengthUnit0.getFormat();
      assertNotNull(format0);
  }
}
