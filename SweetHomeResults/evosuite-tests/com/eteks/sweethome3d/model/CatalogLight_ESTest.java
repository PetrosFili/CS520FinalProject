/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:25:59 GMT 2022
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogLight;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.LightSource;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.math.BigDecimal;
import java.net.URL;
import java.net.URLStreamHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CatalogLight_ESTest extends CatalogLight_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Long long0 = new Long(1L);
      Float float0 = new Float(1.0F);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("", "com.eteks.sweethome3d.model.CatalogLight", 306, "com.eteks.sweethome3d.model.CatalogLight", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[3];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, "", "com.eteks.sweethome3d.model.CatalogLight", "t.|Y0w cn", stringArray0, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, 1.0F, 1981.0F, 1.0F, 1.0F, 1L, true, lightSourceArray0, "com.eteks.sweethome3d.model.CatalogLight", (float[][]) null, false, "com.eteks.sweethome3d.model.CatalogLight", false, true, false, bigDecimal0, bigDecimal0, "");
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(3, lightSourceArray1.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<LightSource> class0 = LightSource.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      float[][] floatArray0 = new float[0][8];
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      CatalogLight catalogLight0 = null;
      try {
        catalogLight0 = new CatalogLight("", "fBm;U", "EYYJj9,f|u-*mU\"}c", resourceURLContent0, resourceURLContent0, (-1.0F), (-1.0F), (-2110.0F), 0.3926991F, true, (LightSource[]) null, floatArray0, (String) null, true, bigDecimal0, bigDecimal0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.eteks.sweethome3d.model.CatalogPieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<LightSource> class0 = LightSource.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "rvmT7vb8X5", "'.o)/-G`CD7_?c6EGK", resourceURLContent0, temporaryURLContent0, (Content) null, 0.3926991F, 0.0F, 0.0F, 0.0F, true, lightSourceArray0, (float[][]) null, "", false, (BigDecimal) null, (BigDecimal) null);
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertSame(lightSourceArray1, lightSourceArray0);
  }
}
