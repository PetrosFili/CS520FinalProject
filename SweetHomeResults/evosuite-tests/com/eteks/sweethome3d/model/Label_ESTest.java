/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:47:11 GMT 2022
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.Label;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.TextStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Label_ESTest extends Label_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Label label0 = new Label("ELEVATION", (-1722.7253F), (-558.9014F));
      label0.setAngle((-558.9014F));
      assertEquals(0.30206412F, label0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Label label0 = new Label("PITCH", "", 0.0F, 0.0F);
      label0.setAngle(0.0F);
      assertEquals(0.0F, label0.getY(), 0.01F);
      assertEquals(0.0F, label0.getX(), 0.01F);
      assertEquals(0.0F, label0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Label label0 = new Label("&aBV2\"5z!oI,Z,mpw", 22.67604F, 22.67604F);
      label0.setElevation(22.67604F);
      assertEquals(22.67604F, label0.getGroundElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Label label0 = new Label("ELEVATION", (-1722.7253F), (-558.9014F));
      label0.setElevation(0.0F);
      assertEquals((-1722.7253F), label0.getX(), 0.01F);
      assertEquals((-558.9014F), label0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Label label0 = new Label("ELEVATION", (-1722.7253F), (-558.9014F));
      Integer integer0 = new Integer((-849));
      label0.setOutlineColor(integer0);
      assertEquals((-1722.7253F), label0.getX(), 0.01F);
      assertEquals((-558.9014F), label0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Label label0 = new Label("&aBV2\"5z!oI,Z,mpw", 22.67604F, 22.67604F);
      label0.setOutlineColor((Integer) null);
      assertEquals(22.67604F, label0.getY(), 0.01F);
      assertEquals(22.67604F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Label label0 = new Label("s&%7_K:&=69$>OZMDT", "s&%7_K:&=69$>OZMDT", 0.0F, (-5034.74F));
      TextStyle textStyle0 = new TextStyle(0.0F, false, false);
      label0.setStyle(textStyle0);
      assertEquals((-5034.74F), label0.getY(), 0.01F);
      assertEquals(0.0F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Label label0 = new Label("&aBV2\"5z!oI,Z,mpw", 22.67604F, 22.67604F);
      label0.setStyle((TextStyle) null);
      assertEquals(22.67604F, label0.getY(), 0.01F);
      assertEquals(22.67604F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Label label0 = new Label("ELEVATION", 0.0F, (-1908.0995F));
      Level level0 = new Level("ELEVATION", (-85.27437F), 726.43256F, (-1908.0995F));
      label0.setLevel(level0);
      float float0 = label0.getGroundElevation();
      assertEquals((-85.27437F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Label label0 = new Label("8t\"9>..+f{Y-#I8!4", "8t\"9>..+f{Y-#I8!4", 3196.07F, 3196.07F);
      float float0 = label0.getGroundElevation();
      assertEquals(3196.07F, label0.getY(), 0.01F);
      assertEquals(3196.07F, label0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      Level level0 = new Level("PITCH", "`K 4T!(2\"", 2314.671F, 2314.671F, 2314.671F);
      Level level1 = (Level)level0.duplicate();
      level0.setElevationIndex((-4815));
      label0.setLevel(level0);
      boolean boolean0 = label0.isAtLevel(level1);
      assertEquals(2314.671F, label0.getGroundElevation(), 0.01F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Label label0 = new Label("Content isn't a JAR entry", "Content isn't a JAR entry", (-1853.6183F), (-4169.0F));
      Level level0 = new Level("Content isn't a JAR entry", "com.eteks.sweethome3d.tools.SimpleURLContent", (-4169.0F), (-1500.995F), (-4169.0F));
      Level level1 = new Level("os.name", 3152.5F, (-1853.6183F), (-4169.0F));
      label0.setLevel(level1);
      boolean boolean0 = label0.isAtLevel(level0);
      assertEquals(3152.5F, label0.getGroundElevation(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      Level level0 = new Level("PITCH", "`K 4T!(2\"", 2314.671F, 2314.671F, 2314.671F);
      Level level1 = (Level)level0.duplicate();
      label0.setLevel(level0);
      boolean boolean0 = label0.isAtLevel(level1);
      assertEquals(2314.671F, label0.getGroundElevation(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      Level level0 = new Level("PITCH", "`K 4T!(2\"", 2314.671F, 2314.671F, 2314.671F);
      boolean boolean0 = label0.isAtLevel(level0);
      assertEquals(2314.671F, label0.getX(), 0.01F);
      assertEquals(2314.671F, label0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Label label0 = new Label("&BV\"5z!38smw", 2283.929F, 2283.929F);
      boolean boolean0 = label0.isAtLevel((Level) null);
      assertEquals(2283.929F, label0.getY(), 0.01F);
      assertEquals(2283.929F, label0.getX(), 0.01F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Label label0 = new Label("c/m.eteks.sweethome3d.Uodel.Label$Property", "c/m.eteks.sweethome3d.Uodel.Label$Property", 1.0F, 775.3671F);
      label0.setText((String) null);
      assertEquals(775.3671F, label0.getY(), 0.01F);
      assertEquals(1.0F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      label0.setText("COLOR");
      assertEquals("COLOR", label0.getText());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Label label0 = new Label("ELEVATION", (-1722.7253F), (-558.9014F));
      label0.setText("ELEVATION");
      assertEquals((-558.9014F), label0.getY(), 0.01F);
      assertEquals((-1722.7253F), label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Label label0 = new Label("X", "X", 227.6F, 227.6F);
      Float float0 = new Float(0.0);
      label0.setPitch(float0);
      label0.setPitch(float0);
      assertEquals(227.6F, label0.getY(), 0.01F);
      assertEquals(227.6F, label0.getX(), 0.01F);
      assertEquals(0.0F, label0.getPitch(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Label label0 = new Label("ELEVATION", (-1722.7253F), (-558.9014F));
      Float float0 = new Float((-2384.0F));
      label0.setPitch(float0);
      assertEquals(3.6104167F, label0.getPitch(), 0.01F);
      
      label0.setPitch((Float) null);
      assertEquals((-558.9014F), label0.getY(), 0.01F);
      assertEquals((-1722.7253F), label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Label label0 = new Label("@7xV'.tUU,r", "jar:", 0.0F, 0.0F);
      label0.move(858.1949F, 0.0F);
      assertEquals(858.1949F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      Level level0 = new Level("PITCH", "`K 4T!(2\"", 2314.671F, 2314.671F, 2314.671F);
      label0.setLevel(level0);
      boolean boolean0 = label0.isAtLevel((Level) null);
      assertEquals(2314.671F, label0.getGroundElevation(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Label label0 = new Label("&BV\"5z!38smw", 2283.929F, 2283.929F);
      label0.setLevel((Level) null);
      assertEquals(2283.929F, label0.getY(), 0.01F);
      assertEquals(2283.929F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Label label0 = new Label((String) null, (-1.0F), (-1.0F));
      boolean boolean0 = label0.containsPoint(0.0F, (-4019.41F), 926.87976F);
      assertEquals((-1.0F), label0.getY(), 0.01F);
      assertEquals((-1.0F), label0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Label label0 = new Label("&BV\"5z!38smw", 2283.929F, 2283.929F);
      Float float0 = new Float(2283.929F);
      boolean boolean0 = label0.containsPoint((float) float0, (float) float0, (float) float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      boolean boolean0 = label0.containsPoint(0.0F, 1336.2899F, 0.0F);
      assertFalse(boolean0);
      assertEquals(2314.671F, label0.getX(), 0.01F);
      assertEquals(2314.671F, label0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      Integer integer0 = new Integer(0);
      label0.setColor(integer0);
      assertEquals(2314.671F, label0.getY(), 0.01F);
      assertEquals(2314.671F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Label label0 = new Label("`", "", 0.0F, 0.0F);
      label0.setColor((Integer) null);
      assertEquals(0.0F, label0.getY(), 0.01F);
      assertEquals(0.0F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Label label0 = new Label("X", "X", 227.6F, 227.6F);
      label0.getColor();
      assertEquals(227.6F, label0.getY(), 0.01F);
      assertEquals(227.6F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Label label0 = new Label("8t\"9>..+f{Y-#I8!4", "8t\"9>..+f{Y-#I8!4", 3196.07F, 3196.07F);
      label0.getOutlineColor();
      assertEquals(3196.07F, label0.getY(), 0.01F);
      assertEquals(3196.07F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      label0.getLevel();
      assertEquals(2314.671F, label0.getY(), 0.01F);
      assertEquals(2314.671F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      label0.getStyle();
      assertEquals(2314.671F, label0.getY(), 0.01F);
      assertEquals(2314.671F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      float float0 = label0.getAngle();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(2314.671F, label0.getX(), 0.01F);
      assertEquals(2314.671F, label0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Label label0 = new Label("ELEVATION", 0.0F, (-1908.0995F));
      label0.getText();
      assertEquals(0.0F, label0.getX(), 0.01F);
      assertEquals((-1908.0995F), label0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Label label0 = new Label("`", "", 0.0F, 0.0F);
      label0.getPitch();
      assertEquals(0.0F, label0.getY(), 0.01F);
      assertEquals(0.0F, label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Label label0 = new Label("Content isn't a JAR entry", "Content isn't a JAR entry", (-1853.6183F), (-4169.0F));
      Label label1 = label0.clone();
      assertEquals((-1853.6183F), label1.getX(), 0.01F);
      assertEquals((-4169.0F), label1.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      float float0 = label0.getElevation();
      assertEquals(2314.671F, label0.getY(), 0.01F);
      assertEquals(2314.671F, label0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Label label0 = new Label("", (-1991.8519F), (-1991.8519F));
      label0.intersectsRectangle((-1991.8519F), (-1338.4F), (-1338.4F), 1.0F);
      assertEquals((-1991.8519F), label0.getY(), 0.01F);
      assertEquals((-1991.8519F), label0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Label label0 = new Label("", 2314.671F, 2314.671F);
      label0.move(0.0F, 2314.671F);
      assertEquals(4629.342F, label0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Label label0 = new Label("ELEVATION", 0.0F, (-1908.0995F));
      label0.getPoints();
      assertEquals(0.0F, label0.getX(), 0.01F);
      assertEquals((-1908.0995F), label0.getY(), 0.01F);
  }
}
