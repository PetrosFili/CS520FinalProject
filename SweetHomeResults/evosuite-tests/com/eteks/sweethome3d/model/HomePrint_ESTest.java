/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:44:15 GMT 2022
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.HomePrint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomePrint_ESTest extends HomePrint_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      Float float0 = new Float(0.0);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-1.0F), 0.0F, 0.0F, (-1.0F), (-1127.437F), (-1.0F), true, true, true, float0, "REVERSE_LANDSCAPE", "4V<4`GA^WhXBtZ");
      float float1 = homePrint0.getPaperBottomMargin();
      assertTrue(homePrint0.isFurniturePrinted());
      assertTrue(homePrint0.isPlanPrinted());
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals((-1127.437F), float1, 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperWidth(), 0.01F);
      assertTrue(homePrint0.isView3DPrinted());
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      Float float0 = new Float(0.0);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-1.0F), 0.0F, 0.0F, (-1.0F), (-1127.437F), (-1.0F), true, true, true, float0, "REVERSE_LANDSCAPE", "4V<4`GA^WhXBtZ");
      float float1 = homePrint0.getPaperWidth();
      assertEquals((-1.0F), float1, 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals((-1127.437F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertTrue(homePrint0.isPlanPrinted());
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertTrue(homePrint0.isFurniturePrinted());
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertTrue(homePrint0.isView3DPrinted());
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      Float float0 = new Float(0.0);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-1.0F), 0.0F, 0.0F, (-1.0F), (-1127.437F), (-1.0F), true, true, true, float0, "REVERSE_LANDSCAPE", "4V<4`GA^WhXBtZ");
      homePrint0.getPaperOrientation();
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperLeftMargin(), 0.01F);
      assertTrue(homePrint0.isFurniturePrinted());
      assertTrue(homePrint0.isPlanPrinted());
      assertTrue(homePrint0.isView3DPrinted());
      assertEquals((-1.0F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals((-1127.437F), homePrint0.getPaperBottomMargin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      Float float0 = new Float(0.0);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-1.0F), 0.0F, 0.0F, (-1.0F), (-1127.437F), (-1.0F), true, true, true, float0, "REVERSE_LANDSCAPE", "4V<4`GA^WhXBtZ");
      boolean boolean0 = homePrint0.isView3DPrinted();
      assertEquals((-1.0F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertTrue(homePrint0.isFurniturePrinted());
      assertTrue(homePrint0.isPlanPrinted());
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
      assertTrue(boolean0);
      assertEquals((-1127.437F), homePrint0.getPaperBottomMargin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      Float float0 = new Float(0.0F);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-321.972F), 0.0F, 0.0F, 0.0F, (-3581.03F), 0.0F, true, true, true, float0, "6>9=[j&[w)", "6>9=[j&[w)");
      boolean boolean0 = homePrint0.isPlanPrinted();
      assertTrue(homePrint0.isFurniturePrinted());
      assertEquals(0.0F, homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals((-321.972F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertTrue(boolean0);
      assertEquals(0.0F, homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals((-3581.03F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertTrue(homePrint0.isView3DPrinted());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      Float float0 = new Float(0.0);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-1.0F), 0.0F, 0.0F, (-1.0F), (-1127.437F), (-1.0F), true, true, true, float0, "REVERSE_LANDSCAPE", "4V<4`GA^WhXBtZ");
      homePrint0.getPlanScale();
      assertEquals((-1.0F), homePrint0.getPaperWidth(), 0.01F);
      assertTrue(homePrint0.isFurniturePrinted());
      assertEquals((-1127.437F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperLeftMargin(), 0.01F);
      assertTrue(homePrint0.isView3DPrinted());
      assertTrue(homePrint0.isPlanPrinted());
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, 1189.8947F, 628.855F, (-750.43835F), (-750.43835F), (-750.43835F), 1189.8947F, true, true, true, (Float) null, "`A.H]00htKE&", "\"HDQAsC15qv[8=VH2Kf");
      float float0 = homePrint0.getPaperTopMargin();
      assertEquals(1189.8947F, homePrint0.getPaperRightMargin(), 0.01F);
      assertTrue(homePrint0.isFurniturePrinted());
      assertEquals(628.855F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals((-750.43835F), float0, 0.01F);
      assertEquals((-750.43835F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertTrue(homePrint0.isPlanPrinted());
      assertEquals((-750.43835F), homePrint0.getPaperLeftMargin(), 0.01F);
      assertTrue(homePrint0.isView3DPrinted());
      assertEquals(1189.8947F, homePrint0.getPaperWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, 1189.8947F, 628.855F, (-750.43835F), (-750.43835F), (-750.43835F), 1189.8947F, true, true, true, (Float) null, "`A.H]00htKE&", "\"HDQAsC15qv[8=VH2Kf");
      boolean boolean0 = homePrint0.isFurniturePrinted();
      assertEquals(1189.8947F, homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals((-750.43835F), homePrint0.getPaperLeftMargin(), 0.01F);
      assertTrue(homePrint0.isPlanPrinted());
      assertEquals((-750.43835F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertTrue(boolean0);
      assertTrue(homePrint0.isView3DPrinted());
      assertEquals((-750.43835F), homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(1189.8947F, homePrint0.getPaperWidth(), 0.01F);
      assertEquals(628.855F, homePrint0.getPaperHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      Float float0 = new Float(0.0);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-1.0F), 0.0F, 0.0F, (-1.0F), (-1127.437F), (-1.0F), true, true, true, float0, "REVERSE_LANDSCAPE", "4V<4`GA^WhXBtZ");
      homePrint0.getHeaderFormat();
      assertTrue(homePrint0.isPlanPrinted());
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals((-1127.437F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperLeftMargin(), 0.01F);
      assertTrue(homePrint0.isFurniturePrinted());
      assertTrue(homePrint0.isView3DPrinted());
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      Float float0 = new Float(0.0F);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-321.972F), 0.0F, 0.0F, 0.0F, (-3581.03F), 0.0F, true, true, true, float0, "6>9=[j&[w)", "6>9=[j&[w)");
      float float1 = homePrint0.getPaperRightMargin();
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertTrue(homePrint0.isPlanPrinted());
      assertEquals((-321.972F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperLeftMargin(), 0.01F);
      assertTrue(homePrint0.isFurniturePrinted());
      assertEquals((-3581.03F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertTrue(homePrint0.isView3DPrinted());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      Float float0 = new Float(0.0F);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-321.972F), 0.0F, 0.0F, 0.0F, (-3581.03F), 0.0F, true, true, true, float0, "6>9=[j&[w)", "6>9=[j&[w)");
      float float1 = homePrint0.getPaperLeftMargin();
      assertEquals((-321.972F), homePrint0.getPaperWidth(), 0.01F);
      assertTrue(homePrint0.isView3DPrinted());
      assertEquals(0.0F, homePrint0.getPaperRightMargin(), 0.01F);
      assertTrue(homePrint0.isPlanPrinted());
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals((-3581.03F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertTrue(homePrint0.isFurniturePrinted());
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(0.0F, float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      Float float0 = new Float(0.0F);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-321.972F), 0.0F, 0.0F, 0.0F, (-3581.03F), 0.0F, true, true, true, float0, "6>9=[j&[w)", "6>9=[j&[w)");
      float float1 = homePrint0.getPaperHeight();
      assertTrue(homePrint0.isFurniturePrinted());
      assertEquals((-321.972F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperLeftMargin(), 0.01F);
      assertTrue(homePrint0.isView3DPrinted());
      assertEquals(0.0F, homePrint0.getPaperRightMargin(), 0.01F);
      assertTrue(homePrint0.isPlanPrinted());
      assertEquals((-3581.03F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(0.0F, float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      Float float0 = new Float(0.0F);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-321.972F), 0.0F, 0.0F, 0.0F, (-3581.03F), 0.0F, true, true, true, float0, "6>9=[j&[w)", "6>9=[j&[w)");
      homePrint0.getFooterFormat();
      assertEquals((-3581.03F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals((-321.972F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperLeftMargin(), 0.01F);
      assertTrue(homePrint0.isFurniturePrinted());
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperRightMargin(), 0.01F);
      assertTrue(homePrint0.isPlanPrinted());
      assertTrue(homePrint0.isView3DPrinted());
  }
}
