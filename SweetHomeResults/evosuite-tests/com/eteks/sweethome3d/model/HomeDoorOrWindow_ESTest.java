/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:35:41 GMT 2022
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeDoorOrWindow;
import com.eteks.sweethome3d.model.Sash;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.SimpleURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.math.BigDecimal;
import java.net.URL;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeDoorOrWindow_ESTest extends HomeDoorOrWindow_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = new Long((-37L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[14];
      Integer integer0 = new Integer(0);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("{IB/", temporaryURLContent0, temporaryURLContent0, (-37L), (-37L), (-37L), (-37L), true, (-37L), (-37L), sashArray0, integer0, (float[][]) null, true, long0, "{IB/", 0, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setAngle((-37L));
      assertEquals(0.6991118F, homeDoorOrWindow0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("u1 ci%)g:'N&)pX", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-1786.05F), sashArray0, (Integer) null, (float[][]) null, true, long0, "PRICE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setAngle(0.0F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Long long0 = new Long((-1L));
      Float float0 = new Float((double) (-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("*{uF8pd?[ #", "", "", "CUT_OUT_SHAPE", stringArray0, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-1L), (-2776.0F), (-2776.0F), (-2776.0F), false, "{#BPD", (-2776.0F), 0.0F, sashArray0, (float[][]) null, "CUT_OUT_SHAPE", false, true, false, (BigDecimal) null, bigDecimal0, "{#BPD");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow("*{uF8pd?[ #", catalogDoorOrWindow0);
      homeDoorOrWindow0.setX(0.0F);
      homeDoorOrWindow0.setX(0.0F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("{#BPD", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-2776.0F), sashArray0, (Integer) null, (float[][]) null, true, long0, "PRICE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWallTop(1185.7034F);
      assertEquals(1185.7034F, homeDoorOrWindow0.getWallTop(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[15];
      Long long0 = new Long((-1L));
      Float float0 = new Float((double) (-1L));
      Sash[] sashArray0 = new Sash[0];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("4f%(%xB,Zk\n", "t8sjXcei/9M5z", "7q.%1RcxB#V!", "-Y@mv", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.0F, (-1L), 0.0F, (-1060.15F), 1185.7034F, false, "PRICE", 1185.7034F, (-1739.3F), true, false, sashArray0, (float[][]) null, true, long0, "u1 ci%)g:'N&)pX", false, false, false, bigDecimal0, bigDecimal0, "7q.%1RcxB#V!", hashMap0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow("7q.%1RcxB#V!", catalogDoorOrWindow0);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      
      homeDoorOrWindow0.setWallTop(0L);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      Sash[] sashArray0 = new Sash[7];
      Long long0 = new Long(0L);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow((String) null, temporaryURLContent0, temporaryURLContent0, 1957.0F, 1957.0F, 1957.0F, 1.0F, false, (-877.094F), (-877.094F), sashArray0, (Integer) null, (float[][]) null, false, long0, "WIDTH_DEPTH_DEFORMABLE", 507.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow("Gemos,p<mM!", catalogDoorOrWindow0);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      
      homeDoorOrWindow0.setWallLeft((-1.0F));
      assertEquals((-1.0F), homeDoorOrWindow0.getWallLeft(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      String[] stringArray0 = new String[9];
      Long long0 = new Long((-1L));
      Float float0 = new Float(0.0);
      Sash[] sashArray0 = new Sash[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "%uX\"Qonl", (String) null, "}c(QQ-<\rJ|N:$$lm0H", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 2072.7314F, 0.0F, (-1L), (-1L), true, 2823.283F, (-1318.3539F), sashArray0, (float[][]) null, "%uX\"Qonl", false, true, true, bigDecimal0, bigDecimal0, "WALL_LEFT");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      
      homeDoorOrWindow0.setWallLeft(0.0F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("u1 ci%)g:'N&)pX", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-1786.05F), sashArray0, (Integer) null, (float[][]) null, true, long0, "PRICE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWallWidth(507.0F);
      assertEquals(507.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("u1 ci%)g:'N&)pX", temporaryURLContent0, temporaryURLContent0, 0.0F, 2.0F, 1185.7034F, (-1060.15F), true, 1.0F, (-1786.05F), sashArray0, (Integer) null, (float[][]) null, true, long0, "CUT_O#T_SPAPE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      
      homeDoorOrWindow0.setWallWidth(1.0F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("u1 ci%)g:'N&)pX", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-1786.05F), sashArray0, (Integer) null, (float[][]) null, true, long0, "PRICE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      
      homeDoorOrWindow0.setWallHeight(0.0F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[8][4];
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("gC!/Ed%bfR^cM<", "gC!/Ed%bfR^cM<", "-@fdN[?@r5L,ncJ.#", (Content) null, (Content) null, 508.10516F, (-1.0F), 3192.5063F, (-1.0F), false, (-1.0F), (-1.0F), sashArray0, floatArray0, "gC!/Ed%bfR^cM<", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow("gC!/Ed%bfR^cM<", catalogDoorOrWindow0);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      
      homeDoorOrWindow0.setWallHeight(1.0F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[15];
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Sash[] sashArray1 = new Sash[1];
      Float float0 = new Float(0.0F);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("K0rw^M(\u0003b%c", "{#BPD", "K0rw^M(\u0003b%c", "PRICE", stringArray0, long0, float0, temporaryURLContent0, (Content) null, resourceURLContent0, 507.0F, (-2712.4282F), (-2712.4282F), 0.0F, 12.5F, true, "M0,0 v1 h1 v-1 z", 1970.0F, 10.350546F, sashArray1, (float[][]) null, false, "CUT_O#T_SPAPE", true, true, false, bigDecimal0, bigDecimal0, (String) null);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow("{#BPD", catalogDoorOrWindow0);
      homeDoorOrWindow0.setSashes(sashArray0);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("u1 ci%)g:'N&)pX", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-1786.05F), sashArray0, (Integer) null, (float[][]) null, true, long0, "PRICE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Sash[] sashArray1 = new Sash[1];
      Sash sash0 = new Sash((-1387.8171F), (-4871.536F), 1185.7034F, (-2776.0F), (-1060.15F));
      sashArray1[0] = sash0;
      homeDoorOrWindow0.setSashes(sashArray1);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("u1 ci%)g:'N&)pX", temporaryURLContent0, temporaryURLContent0, 0.0F, 2.0F, 1185.7034F, (-1060.15F), true, 1.0F, (-1786.05F), sashArray0, (Integer) null, (float[][]) null, true, long0, "CUT_O#T_SPAPE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Sash[] sashArray1 = new Sash[1];
      homeDoorOrWindow0.setSashes(sashArray1);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("{#BPD", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-2776.0F), sashArray0, (Integer) null, (float[][]) null, true, long0, "PRICE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setSashes(sashArray0);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long(31L);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", temporaryURLContent0, temporaryURLContent0, 31L, 31L, 31L, 31L, false, 31L, 31L, sashArray0, (Integer) null, (float[][]) null, false, long0, "", 31L, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setY(31L);
      assertEquals(31.0F, homeDoorOrWindow0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("u1 ci%)g:'N&)pX", temporaryURLContent0, temporaryURLContent0, 0.0F, 2.0F, 1185.7034F, (-1060.15F), true, 1.0F, (-1786.05F), sashArray0, (Integer) null, (float[][]) null, true, long0, "CUT_O#T_SPAPE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setY(1.0F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("PRICE", "PRICE", "BOUND_TO_WALL", temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, 1927.035F, (-790.3439F), (-2473.5F), (-1387.8171F), true, (-194.4F), (-1.0F), sashArray0, (float[][]) null, "$VALUES", true, (BigDecimal) null, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow("CUDG_O#T_SPAPE", homeDoorOrWindow0);
      assertEquals(0.0F, homeDoorOrWindow1.getWallTop(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow1.getWallWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getWallLeft(), 0.01F);
      assertEquals((-194.4F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow1.getWallHeight(), 0.01F);
      assertEquals((-1.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("{#BPD", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-2776.0F), sashArray0, (Integer) null, (float[][]) null, true, long0, "PRICE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWallCutOutOnBothSides(false);
      assertFalse(homeDoorOrWindow0.isWallCutOutOnBothSides());
      
      homeDoorOrWindow0.setWallCutOutOnBothSides(true);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("{#BPD", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-2776.0F), sashArray0, (Integer) null, (float[][]) null, true, long0, "", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWallCutOutOnBothSides(true);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("{#BPD", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-2776.0F), sashArray0, (Integer) null, (float[][]) null, true, long0, "", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWallThickness(1185.7034F);
      assertEquals(1185.7034F, homeDoorOrWindow0.getWallThickness(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Long long0 = new Long(31L);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", temporaryURLContent0, temporaryURLContent0, 31L, 31L, 31L, 31L, false, 31L, 31L, sashArray0, (Integer) null, (float[][]) null, false, long0, "", 31L, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWallThickness(31L);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("Aypa>5wp2:&rBO", "os.version", "{#BPD", temporaryURLContent0, temporaryURLContent0, 1.0F, 0.3926991F, (-1L), (-2776.0F), false, (-1060.15F), (-1060.15F), sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow("{#BPD", catalogDoorOrWindow0);
      homeDoorOrWindow0.setBoundToWall(true);
      assertTrue(homeDoorOrWindow0.isBoundToWall());
      
      homeDoorOrWindow0.setBoundToWall(false);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("u1 ci%)g:'N&)pX", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-1786.05F), sashArray0, (Integer) null, (float[][]) null, true, long0, "PRICE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setBoundToWall(false);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("{#BPD", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-2776.0F), sashArray0, (Integer) null, (float[][]) null, true, long0, "", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setCutOutShape("");
      homeDoorOrWindow0.setCutOutShape((String) null);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("u1 ci%)g:'N&)pX", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2787.977F), 1185.7034F, (-1060.15F), true, 1.0F, (-1786.05F), sashArray0, (Integer) null, (float[][]) null, true, long0, "PRICE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setCutOutShape((String) null);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Long long0 = new Long((-1L));
      Float float0 = new Float((double) (-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("*{uF8pd?[ #", "", "", "CUT_OUT_SHAPE", stringArray0, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-1L), (-2776.0F), (-2776.0F), (-2776.0F), false, "{#BPD", (-2776.0F), 0.0F, sashArray0, (float[][]) null, "CUT_OUT_SHAPE", false, true, false, (BigDecimal) null, bigDecimal0, "{#BPD");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow("*{uF8pd?[ #", catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidthDepthDeformable(false);
      assertFalse(homeDoorOrWindow0.isWidthDepthDeformable());
      
      homeDoorOrWindow0.setWidthDepthDeformable(true);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("PRICE", "PRICE", "BOUND_TO_WALL", temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, 1927.035F, (-790.3439F), (-2473.5F), (-1387.8171F), true, (-194.4F), (-1.0F), sashArray0, (float[][]) null, "$VALUES", true, (BigDecimal) null, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidthDepthDeformable(true);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("u1 ci%)g:'N&)pX", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, (-2776.0F), (-1786.05F), sashArray0, (Integer) null, (float[][]) null, true, long0, "PRICE", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWallDistance(1.0F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Long long0 = Long.valueOf((-14L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", temporaryURLContent0, temporaryURLContent0, (-14L), (-14L), (-14L), (-14L), true, (-14L), (-14L), sashArray0, (Integer) null, (float[][]) null, true, long0, "", (-14L), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWallDistance((-14L));
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      SimpleURLContent simpleURLContent0 = new SimpleURLContent(uRL0);
      Sash[] sashArray0 = new Sash[5];
      Integer integer0 = new Integer(41);
      float[][] floatArray0 = new float[5][8];
      Long long0 = new Long((-1463L));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow((String) null, simpleURLContent0, simpleURLContent0, 0.0F, 1.0F, 1.0F, 0.0F, false, 0.0F, 1.0F, sashArray0, integer0, floatArray0, true, long0, "", (-2206.15F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      SimpleURLContent simpleURLContent0 = new SimpleURLContent(uRL0);
      Sash[] sashArray0 = new Sash[5];
      Integer integer0 = new Integer(41);
      float[][] floatArray0 = new float[5][8];
      Long long0 = new Long((-1463L));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow((String) null, simpleURLContent0, simpleURLContent0, 0.0F, 0.0F, 1.0F, 0.0F, false, 0.0F, 1.0F, sashArray0, integer0, floatArray0, true, long0, "", (-2206.15F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Long long0 = new Long((-1L));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("{#BPD", temporaryURLContent0, temporaryURLContent0, 0.0F, (-2776.0F), 1185.7034F, (-1060.15F), true, 1.0F, (-2776.0F), sashArray0, (Integer) null, (float[][]) null, true, long0, "", 1.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      float float0 = homeDoorOrWindow0.getWallLeft();
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Sash[] sashArray0 = new Sash[7];
      Integer integer0 = Integer.valueOf(64);
      Long long0 = new Long(0L);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("QDl{`", (Content) null, (Content) null, (-417.936F), (-417.936F), (-417.936F), (-417.936F), true, 1813.2983F, 1813.2983F, sashArray0, integer0, (float[][]) null, true, long0, "WALL_WIDTH", 64, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow("l3-=~", catalogDoorOrWindow0);
      float float0 = homeDoorOrWindow0.getWallTop();
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Long long0 = new Long(1351L);
      Float float0 = new Float((float) 1351L);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(classLoader0, "");
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[6][3];
      BigDecimal bigDecimal0 = new BigDecimal((-3143.718438658329));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("$Ks", "$Ks", "$Ks", "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.0F, 4000.0F, 4000.0F, (-1.0F), (-1.0F), false, "", 0.0F, 4000.0F, false, false, sashArray0, floatArray0, true, long0, "4=3", true, false, true, bigDecimal0, bigDecimal0, "4=3");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      float float1 = homeDoorOrWindow0.getWallWidth();
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(1.0F, float1, 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long((-1912L));
      Float float0 = new Float((double) (-1912L));
      Sash[] sashArray0 = new Sash[4];
      BigDecimal bigDecimal0 = new BigDecimal(406);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "&ndz7kD\"XHu", "&ndz7kD\"XHu", "0wBXAAqSD:M}2x", stringArray0, long0, float0, (Content) null, (Content) null, (Content) null, (-1912L), 0.3926991F, 93.10884F, 3507.4F, 1196.2F, false, "&ndz7kD\"XHu", 0.0F, (-1912L), false, false, sashArray0, (float[][]) null, true, long0, "|P$$~", true, false, true, bigDecimal0, bigDecimal0, "&ndz7kD\"XHu", hashMap0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      float float1 = homeDoorOrWindow0.getWallHeight();
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
      assertEquals(1.0F, float1, 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      Sash[] sashArray0 = new Sash[7];
      float[][] floatArray0 = new float[4][6];
      BigDecimal bigDecimal0 = new BigDecimal(1785L);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("jar", "2", "2", uRLContent0, uRLContent0, uRLContent0, 0.01F, 0.01F, 0.01F, (-2722.927F), false, 0.0F, 0.0F, sashArray0, floatArray0, "BF-, /tHQdd8m@zi", false, true, true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = (HomeDoorOrWindow)homeDoorOrWindow0.duplicate();
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow1.getWallTop(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow1.getWallHeight(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow1.getWallWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Long long0 = new Long((-138L));
      Float float0 = new Float(1.0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(classLoader0, "");
      Sash[] sashArray0 = new Sash[0];
      float[][] floatArray0 = new float[7][3];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("[+", "[+", "_@^Mrw?\"IdaE_y7~", "_@^Mrw?\"IdaE_y7~", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-138L), (-138L), 0.0F, (-138L), (-138L), true, "", (-138L), 0.0F, sashArray0, floatArray0, "", false, false, true, bigDecimal0, bigDecimal0, "");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isBoundToWall();
      assertEquals(1.0F, homeDoorOrWindow0.getWallWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallTop(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWallHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallLeft(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(classLoader0, "");
      Sash[] sashArray0 = new Sash[4];
      float[][] floatArray0 = new float[4][9];
      BigDecimal bigDecimal0 = new BigDecimal((-1.0F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("&9(a<R}qG [", "", "", resourceURLContent0, resourceURLContent0, resourceURLContent0, 2108.8516F, 2108.8516F, (-1030.4674F), 0.0F, true, 0.0F, (-590.5122F), sashArray0, floatArray0, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow("&9(a<R}qG [", homeDoorOrWindow0);
      assertEquals(0.0F, homeDoorOrWindow1.getWallLeft(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow1.getWallHeight(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertEquals((-590.5122F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getWallTop(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow1.getWallWidth(), 0.01F);
  }
}
