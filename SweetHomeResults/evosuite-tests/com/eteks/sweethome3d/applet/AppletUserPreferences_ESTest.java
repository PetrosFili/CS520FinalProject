/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 02:46:47 GMT 2022
 */

package com.eteks.sweethome3d.applet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.applet.AppletUserPreferences;
import com.eteks.sweethome3d.model.LengthUnit;
import java.net.URI;
import java.net.URL;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AppletUserPreferences_ESTest extends AppletUserPreferences_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0);
      assertNotNull(appletUserPreferences0);
      assertEquals(0, uRLArray0.length);
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertTrue(appletUserPreferences0.isGridVisible());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getCurrency());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      
      appletUserPreferences0.setLanguage("k]T");
      assertEquals(0, uRLArray0.length);
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertEquals("k]T", appletUserPreferences0.getLanguage());
      assertTrue(appletUserPreferences0.isGridVisible());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getCurrency());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      
      AppletUserPreferences appletUserPreferences0 = null;
      try {
        appletUserPreferences0 = new AppletUserPreferences((URL[]) null, (URL[]) null, uRL0, uRL0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.applet.AppletUserPreferences", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL[] uRLArray0 = new URL[1];
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertEquals("", uRI0.getRawPath());
      assertTrue(uRI0.isAbsolute());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals((-1), uRI0.getPort());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawQuery());
      assertEquals("foo.bar", uRI0.getHost());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://foo.bar");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, "W}n?");
      assertTrue(boolean0);
      
      URL uRL0 = MockURI.toURL(uRI0);
      assertNotNull(uRL0);
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertEquals("", uRI0.getRawPath());
      assertTrue(uRI0.isAbsolute());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals((-1), uRI0.getPort());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawQuery());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("", uRL0.getPath());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("foo.bar", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("", uRL0.getFile());
      assertEquals("http://foo.bar", uRL0.toString());
      
      AppletUserPreferences appletUserPreferences0 = null;
      try {
        appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0, uRL0, uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0);
      assertNotNull(appletUserPreferences0);
      assertEquals(0, uRLArray0.length);
      assertTrue(appletUserPreferences0.isGridVisible());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertNull(appletUserPreferences0.getCurrency());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      
      appletUserPreferences0.setActionTipIgnored("Bt(SY,");
      assertEquals(0, uRLArray0.length);
      assertTrue(appletUserPreferences0.isGridVisible());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertNull(appletUserPreferences0.getCurrency());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      
      appletUserPreferences0.resetIgnoredActionTips();
      assertEquals(0, uRLArray0.length);
      assertTrue(appletUserPreferences0.isGridVisible());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertNull(appletUserPreferences0.getCurrency());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      
      appletUserPreferences0.write();
      assertEquals(0, uRLArray0.length);
      assertTrue(appletUserPreferences0.isGridVisible());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertNull(appletUserPreferences0.getCurrency());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0);
      assertNotNull(appletUserPreferences0);
      assertEquals(0, uRLArray0.length);
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isGridVisible());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertNull(appletUserPreferences0.getCurrency());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      
      appletUserPreferences0.setDefaultFontName("6F*");
      assertEquals(0, uRLArray0.length);
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isGridVisible());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertNull(appletUserPreferences0.getCurrency());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertEquals("6F*", appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      
      appletUserPreferences0.write();
      assertEquals(0, uRLArray0.length);
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isGridVisible());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertNull(appletUserPreferences0.getCurrency());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertEquals("6F*", appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0);
      assertNotNull(appletUserPreferences0);
      assertEquals(0, uRLArray0.length);
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertNull(appletUserPreferences0.getCurrency());
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertTrue(appletUserPreferences0.isGridVisible());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      
      appletUserPreferences0.write();
      assertEquals(0, uRLArray0.length);
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertNull(appletUserPreferences0.getCurrency());
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertTrue(appletUserPreferences0.isGridVisible());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0);
      assertNotNull(appletUserPreferences0);
      assertEquals(0, uRLArray0.length);
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertNull(appletUserPreferences0.getCurrency());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertTrue(appletUserPreferences0.isGridVisible());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      
      boolean boolean0 = appletUserPreferences0.isActionTipIgnored("Couldn't write prefereces");
      assertFalse(boolean0);
      assertEquals(0, uRLArray0.length);
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertNull(appletUserPreferences0.getCurrency());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertTrue(appletUserPreferences0.isGridVisible());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0);
      assertNotNull(appletUserPreferences0);
      assertEquals(0, uRLArray0.length);
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertTrue(appletUserPreferences0.isGridVisible());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertNull(appletUserPreferences0.getCurrency());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      
      appletUserPreferences0.setActionTipIgnored("Bt(SY,");
      assertEquals(0, uRLArray0.length);
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertTrue(appletUserPreferences0.isGridVisible());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertNull(appletUserPreferences0.getCurrency());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      
      appletUserPreferences0.write();
      assertEquals(0, uRLArray0.length);
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertTrue(appletUserPreferences0.isGridVisible());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertNull(appletUserPreferences0.getCurrency());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0);
      assertNotNull(appletUserPreferences0);
      assertEquals(0, uRLArray0.length);
      assertTrue(appletUserPreferences0.isGridVisible());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertNull(appletUserPreferences0.getCurrency());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      
      // Undeclared exception!
      try { 
        appletUserPreferences0.furnitureLibraryExists("%8Hvb2=4PtQ#A");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.applet.AppletUserPreferences", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0);
      assertNotNull(appletUserPreferences0);
      assertEquals(0, uRLArray0.length);
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertTrue(appletUserPreferences0.isGridVisible());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertNull(appletUserPreferences0.getCurrency());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      
      // Undeclared exception!
      try { 
        appletUserPreferences0.getLibraries();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.applet.AppletUserPreferences", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0);
      assertNotNull(appletUserPreferences0);
      assertEquals(0, uRLArray0.length);
      assertEquals("en", appletUserPreferences0.getLanguage());
      assertTrue(appletUserPreferences0.isNavigationPanelVisible());
      assertFalse(appletUserPreferences0.isValueAddedTaxEnabled());
      assertEquals(12.0F, appletUserPreferences0.getNewFloorThickness(), 0.01F);
      assertEquals(LengthUnit.CENTIMETER, appletUserPreferences0.getLengthUnit());
      assertTrue(appletUserPreferences0.isFurnitureCatalogViewedInTree());
      assertNull(appletUserPreferences0.getNewRoomFloorColor());
      assertTrue(appletUserPreferences0.isFurnitureViewedFromTop());
      assertEquals(1.0F, appletUserPreferences0.getNewWallBaseboardThickness(), 0.01F);
      assertTrue(appletUserPreferences0.isRulersVisible());
      assertTrue(appletUserPreferences0.isMagnetismEnabled());
      assertTrue(appletUserPreferences0.isGridVisible());
      assertTrue(appletUserPreferences0.isRoomFloorColoredOrTextured());
      assertNull(appletUserPreferences0.getUpdatesMinimumDate());
      assertEquals(50, appletUserPreferences0.getStoredCamerasMaxCount());
      assertNull(appletUserPreferences0.getDefaultFontName());
      assertNull(appletUserPreferences0.getCurrency());
      assertEquals(250.0F, appletUserPreferences0.getNewWallHeight(), 0.01F);
      assertEquals(7.0F, appletUserPreferences0.getNewWallBaseboardHeight(), 0.01F);
      assertEquals(10, appletUserPreferences0.getRecentHomesMaxCount());
      assertEquals(0, appletUserPreferences0.getAutoSaveDelayForRecovery());
      assertFalse(appletUserPreferences0.isCheckUpdatesEnabled());
      assertNull(appletUserPreferences0.getPhotoRenderer());
      assertTrue(appletUserPreferences0.isObserverCameraSelectedAtChange());
      assertEquals(128, appletUserPreferences0.getFurnitureModelIconSize());
      assertFalse(appletUserPreferences0.isDrawingModeEnabled());
      assertFalse(appletUserPreferences0.isAerialViewCenteredOnSelectionEnabled());
      assertEquals(7.5F, appletUserPreferences0.getNewWallThickness(), 0.01F);
      
      // Undeclared exception!
      try { 
        appletUserPreferences0.texturesLibraryExists("com.eteks.sweethome3d.applet.AppletUserPreferences$4");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.applet.AppletUserPreferences", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL[] uRLArray0 = new URL[4];
      URL uRL0 = MockURL.getHttpExample();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(10);
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0[0], uRLArray0, uRLArray0[0], uRL0, uRLArray0[0], scheduledThreadPoolExecutor0, "+aT2W1?[1.n");
      // Undeclared exception!
      try { 
        appletUserPreferences0.addLanguageLibrary("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.applet.AppletUserPreferences", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0);
      // Undeclared exception!
      try { 
        appletUserPreferences0.languageLibraryExists("com.eteks.sweethome3d.applet.AppletUserPreferences$4$1");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.applet.AppletUserPreferences", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      URL[] uRLArray1 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray1);
      // Undeclared exception!
      try { 
        appletUserPreferences0.addFurnitureLibrary("t2G-b.");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.applet.AppletUserPreferences", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      AppletUserPreferences appletUserPreferences0 = new AppletUserPreferences(uRLArray0, uRLArray0);
      // Undeclared exception!
      try { 
        appletUserPreferences0.addTexturesLibrary("footInchFormat");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.applet.AppletUserPreferences", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      AppletUserPreferences appletUserPreferences0 = null;
      try {
        appletUserPreferences0 = new AppletUserPreferences((URL[]) null, uRL0, (URL[]) null, uRL0, uRL0, uRL0, "m/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.io.DefaultFurnitureCatalog", e);
      }
  }
}
