/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 02:51:49 GMT 2022
 */

package com.eteks.sweethome3d.applet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.applet.HomeAppletRecorder;
import com.eteks.sweethome3d.io.ContentRecording;
import com.eteks.sweethome3d.io.HomeXMLExporter;
import com.eteks.sweethome3d.io.HomeXMLHandler;
import com.eteks.sweethome3d.model.Home;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeAppletRecorder_ESTest extends HomeAppletRecorder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HomeAppletRecorder homeAppletRecorder0 = new HomeAppletRecorder("_8", "_8", "_8");
      try { 
        homeAppletRecorder0.deleteHome("_8");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Deletion isn't available
         //
         verifyException("com.eteks.sweethome3d.applet.HomeAppletRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HomeAppletRecorder homeAppletRecorder0 = new HomeAppletRecorder("otv", "otv", "otv");
      Home home0 = new Home();
      long long0 = homeAppletRecorder0.getHomeLength(home0);
      assertEquals(1604L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HomeAppletRecorder homeAppletRecorder0 = new HomeAppletRecorder("=b", "=b", "=b");
      try { 
        homeAppletRecorder0.readHome("=b");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't read home from =b
         //
         verifyException("com.eteks.sweethome3d.applet.HomeAppletRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HomeAppletRecorder homeAppletRecorder0 = new HomeAppletRecorder("CK.~t_N", "CK.~t_N", "CK.~t_N");
      Home home0 = new Home();
      try { 
        homeAppletRecorder0.writeHome(home0, "CK.~t_N");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't save home CK.~t_N
         //
         verifyException("com.eteks.sweethome3d.applet.HomeAppletRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ContentRecording contentRecording0 = ContentRecording.INCLUDE_ALL_CONTENT;
      HomeAppletRecorder homeAppletRecorder0 = new HomeAppletRecorder("", "", "", "", contentRecording0);
      try { 
        homeAppletRecorder0.deleteHome("\"_V^D4*Ej`xbGOk`_D");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't delete home \"_V^D4*Ej`xbGOk`_D
         //
         verifyException("com.eteks.sweethome3d.applet.HomeAppletRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HomeAppletRecorder homeAppletRecorder0 = new HomeAppletRecorder("3`z_W@'f7vt>", "arcExtent", "arcExtent", false);
      boolean boolean0 = homeAppletRecorder0.isHomeDeletionAvailable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HomeAppletRecorder homeAppletRecorder0 = new HomeAppletRecorder("otv", "otv", "otv");
      try { 
        homeAppletRecorder0.exists("otv");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't read homes from server
         //
         verifyException("com.eteks.sweethome3d.applet.HomeAppletRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ContentRecording contentRecording0 = ContentRecording.INCLUDE_ALL_CONTENT;
      HomeXMLHandler homeXMLHandler0 = new HomeXMLHandler();
      HomeXMLExporter homeXMLExporter0 = new HomeXMLExporter();
      HomeAppletRecorder homeAppletRecorder0 = new HomeAppletRecorder("HZa", "\"\r\n", "9", "", contentRecording0, homeXMLHandler0, homeXMLExporter0);
      Home home0 = new Home(0.0F);
      long long0 = homeAppletRecorder0.getHomeLength(home0);
      assertEquals(604L, long0);
  }
}
