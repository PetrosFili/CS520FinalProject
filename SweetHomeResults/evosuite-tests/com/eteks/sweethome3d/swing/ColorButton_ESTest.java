/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 04:15:46 GMT 2022
 */

package com.eteks.sweethome3d.swing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.io.FileUserPreferences;
import com.eteks.sweethome3d.swing.ColorButton;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.io.File;
import java.util.concurrent.Executor;
import javax.swing.JLayeredPane;
import javax.swing.plaf.basic.BasicRadioButtonUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColorButton_ESTest extends ColorButton_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile("lrYss9,=\"|&#");
      File[] fileArray0 = new File[3];
      FileUserPreferences fileUserPreferences0 = new FileUserPreferences(mockFile0, fileArray0, (Executor) null);
      ColorButton colorButton0 = new ColorButton(fileUserPreferences0);
      BasicRadioButtonUI basicRadioButtonUI0 = new BasicRadioButtonUI();
      Dimension dimension0 = basicRadioButtonUI0.getMaximumSize(colorButton0);
      assertEquals(64, dimension0.width);
      assertEquals(26, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColorButton colorButton0 = new ColorButton();
      colorButton0.setColorDialogTitle("work");
      colorButton0.setColorDialogTitle("work");
      assertFalse(colorButton0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColorButton colorButton0 = new ColorButton();
      colorButton0.setColorDialogTitle((String) null);
      assertFalse(colorButton0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ColorButton colorButton0 = new ColorButton();
      colorButton0.setColor((Integer) null);
      assertFalse(colorButton0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ColorButton colorButton0 = new ColorButton();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      colorButton0.setColor(integer0);
      colorButton0.setColor(integer0);
      assertFalse(colorButton0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ColorButton colorButton0 = new ColorButton();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      colorButton0.setColor(integer0);
      // Undeclared exception!
      try { 
        colorButton0.doClick();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ColorButton colorButton0 = new ColorButton();
      Integer integer0 = colorButton0.getColor();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ColorButton colorButton0 = new ColorButton();
      String string0 = colorButton0.getColorDialogTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ColorButton colorButton0 = new ColorButton();
      // Undeclared exception!
      try { 
        colorButton0.doClick();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
