/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:18:10 GMT 2022
 */

package com.eteks.sweethome3d.io;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.io.HomeXMLExporter;
import com.eteks.sweethome3d.io.XMLWriter;
import com.eteks.sweethome3d.model.Home;
import com.eteks.sweethome3d.model.HomePrint;
import java.io.ByteArrayOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectXMLExporter_ESTest extends ObjectXMLExporter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HomeXMLExporter homeXMLExporter0 = new HomeXMLExporter();
      MockFile mockFile0 = new MockFile("*7k'MF1ye_=", "*7k'MF1ye_=");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      XMLWriter xMLWriter0 = new XMLWriter(mockFileOutputStream0);
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.REVERSE_LANDSCAPE;
      Float float0 = new Float(3073.292);
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-1001.9778F), (-1001.9778F), 0.0F, 0.0F, 0.0F, 18.0F, true, true, true, float0, "*7k'MF1ye_=", "*7k'MF1ye_=");
      homeXMLExporter0.writePrint(xMLWriter0, homePrint0);
      assertEquals(0.0F, homePrint0.getPaperLeftMargin(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HomeXMLExporter homeXMLExporter0 = new HomeXMLExporter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1505);
      XMLWriter xMLWriter0 = new XMLWriter(byteArrayOutputStream0);
      Home home0 = new Home();
      homeXMLExporter0.writeElement(xMLWriter0, home0);
      assertFalse(home0.isRepaired());
  }
}
