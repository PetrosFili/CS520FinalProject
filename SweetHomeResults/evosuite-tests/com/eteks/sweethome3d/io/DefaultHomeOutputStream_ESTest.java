/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:04:43 GMT 2022
 */

package com.eteks.sweethome3d.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.io.ContentRecording;
import com.eteks.sweethome3d.io.DefaultHomeOutputStream;
import com.eteks.sweethome3d.io.HomeURLContent;
import com.eteks.sweethome3d.io.HomeXMLExporter;
import com.eteks.sweethome3d.model.BackgroundImage;
import com.eteks.sweethome3d.model.Home;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.URL;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultHomeOutputStream_ESTest extends DefaultHomeOutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Home home0 = new Home();
      ContentRecording contentRecording0 = ContentRecording.INCLUDE_ALL_CONTENT;
      HomeXMLExporter homeXMLExporter0 = new HomeXMLExporter();
      DefaultHomeOutputStream defaultHomeOutputStream0 = new DefaultHomeOutputStream(byteArrayOutputStream0, (-1), contentRecording0, false, homeXMLExporter0);
      defaultHomeOutputStream0.writeHome(home0);
      //  // Unstable assertion: assertEquals("PK\u0003\u0004\u0014\u0000\b\b\b\u0000\u201C\u0018\u0153T\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000Home.xml\u2022\u201C]o\u00DA0\u0014\u2020\u00EF\u00FB+|\u00E7\u00ABQ\u00E7\u00ABI$B\u00C5 m\"\u00B5\u2026u\b\u00A4\u00DD\u00A0@\f\u00B1\u00E6\u00D8\u2018\u00E3@\u00E9\u00AF\u00DFqJ\u00A0\u00A8\u00D3\u00C4\u00E4\u203A\u00E4=\u001Fy\u00F2\u017E\u00E3\u00FE\u00FD[\u00C9\u00D1\u017D\u00AA\u0161I\u0011a\u00ABG\u00F0\u00FD\u00E0\u00A6_\u00C8\u2019\u017EU\u0178\u0010\u201A\u00D1:+\u00A9\u00CA\"\u00ACe5j\u001F1\u00DAg\u0153'\u201Dm\u000B\u001Da\u00DB#P<\u00B8A\u00A8\u00BFi\u201D`\u00BAQt\u00CEj\u00B6\u00E2t\u00AAdE\u2022> \u0001u\u0011~\u0019>\u00C7\u00F8\u00F6\u0161\u00CCE:\u017E%\u00D7\u00A5\u017D\u00E3\u00E9\u00B5\u00A9I\u0153>&\u00B3\u00EBr\u00E7\u00E9\u00CF\u00F4\u00FBS\u2021K\u00C5\u017D))J*4\u00DA*\u00D9\u02C6|$\u00B9T\u0011&d\u0018\u02DC\u0192Q\u00FD\u00FBp\u00D2F\u00A3\u00D8}\u0018a\u00C4\uFFFDC'u\u00DC\u001E\u00F0\u201C2\u00CE\u2122\u00D8>\u00FD5Z\u0015R\u00CB\u0005\u00CBu\u0011a\u2014tBg\u00B6sR\u2020uE\u00D7\u00FA5\u00D3L\u001A\u00DAx\u00B1t\u00C6\u00CB\u00D7\u00E1,\uFFFD\u001C\u0013~4\u0019g\u00FA\u0000\u00BD1\u00DA\u00B1\u0153vM\u001D\u00BB\u0013.Z\u00B4\u00A5Kw\u00E9\u001C\u0192_\u00CA\u001F\u0014\u0018\u0003\u00C9\u00D4\u0152\u00FC\u00E8\u00CBZ\u2013UV\u00D7\u00E8-\u00C2\u00DF,b\u00F6\u0000AE\u00BB\u0010(g\uFFFD\u00AF)\u00FC\u00DC1\"\u00A4\u00D2\u00C5\u02DC)\u00F8f\u00BB]\u00AD\u00C8\u00A5\u00D8\u00C2\u0018r\u00DA\u00BD\u0003M\u00F7\u001A\u201E\uFFFD}g\u0192\u00B7\u0161\u2022\u00F4\u2014\u0014 >>w\u00F3\u201C\u00AB\u0161*\u00D8\u00D4\uFFFD\u2022D\u2122\u00D6\u0160\u00AD\u001ACw\u0019\uFFFD\u2013T\u00D4\u0011\u017E\u00A6/\u00C9\u0004\u0006jX\u00BDK\u00D2w@\u00F4?\u00A4l\u000Fb\u00CF\r}?\u00F0=0\u2019\u00E9uaP\u00AC\u00F0\u00CEqC\u000F\u00A4\r\u00A3<\u0178l\u00E6\u0152\u00EE\u00DBk\u0013\u201AjR\r#\bNh\u00BB$\u00B4\u0003\u00CB\u00D8|4\u00E9\u000B\u00E1\u00A7\u203A\u00F4\u000F8\u2039\u0153\u00F1\u02C6u\u00E6sz\u2013ky\u00A1\u00ED\u00E2\u00F3\u0003\u00CF\u0001\u00B7\u00FE\u001B\u00AFkn\u00FC\u00E0\u000FPK\u0007\b\u201D\tVj\u00DB\u0001\u0000\u0000\u000E\u0004\u0000\u0000PK\u0001\u0002\u0014\u0000\u0014\u0000\b\b\b\u0000\u201C\u0018\u0153T\u201D\tVj\u00DB\u0001\u0000\u0000\u000E\u0004\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Home.xmlPK\u0005\u0006\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u00006\u0000\u0000\u0000\u0011\u0002\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
      //  // Unstable assertion: assertEquals(605, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1242);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      ContentRecording contentRecording0 = ContentRecording.INCLUDE_TEMPORARY_CONTENT;
      DefaultHomeOutputStream defaultHomeOutputStream0 = null;
      try {
        defaultHomeOutputStream0 = new DefaultHomeOutputStream(mockPrintStream0, 1242, contentRecording0, false, (HomeXMLExporter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No entry specified for home data
         //
         verifyException("com.eteks.sweethome3d.io.DefaultHomeOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Z;BxC");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("/:yxO;lo-");
      Home home0 = new Home();
      URL uRL0 = MockURL.getHttpExample();
      HomeURLContent homeURLContent0 = new HomeURLContent(uRL0);
      BackgroundImage backgroundImage0 = new BackgroundImage(homeURLContent0, (-4294.299F), (-4294.299F), (-4294.299F), 0.0F, 0.0F, (-4294.299F), 1, false);
      home0.setBackgroundImage(backgroundImage0);
      DefaultHomeOutputStream defaultHomeOutputStream0 = new DefaultHomeOutputStream(mockFileOutputStream0, 7, false);
      defaultHomeOutputStream0.writeHome(home0);
      assertEquals(250.0F, home0.getWallHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("/:yxO;lo-", "/:yxO;lo-");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(objectOutputStream0);
      ContentRecording contentRecording0 = ContentRecording.INCLUDE_NO_CONTENT;
      DefaultHomeOutputStream defaultHomeOutputStream0 = new DefaultHomeOutputStream(dataOutputStream0, 1, contentRecording0);
      Home home0 = new Home();
      defaultHomeOutputStream0.writeHome(home0);
      assertEquals(1069L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("/:yxO;lo-", false);
      Home home0 = new Home();
      URL uRL0 = MockURL.getHttpExample();
      HomeURLContent homeURLContent0 = new HomeURLContent(uRL0);
      BackgroundImage backgroundImage0 = new BackgroundImage(homeURLContent0, (-4294.299F), (-4294.299F), (-4294.299F), 42, 42, (-4294.299F), 42, false);
      home0.setBackgroundImage(backgroundImage0);
      DefaultHomeOutputStream defaultHomeOutputStream0 = new DefaultHomeOutputStream(mockFileOutputStream0, 7, true);
      try { 
        defaultHomeOutputStream0.writeHome(home0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DefaultHomeOutputStream defaultHomeOutputStream0 = new DefaultHomeOutputStream(byteArrayOutputStream0);
      Home home0 = new Home(57.8179F);
      defaultHomeOutputStream0.writeHome(home0);
      assertEquals(3476, byteArrayOutputStream0.size());
  }
}
