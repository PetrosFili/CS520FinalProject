/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:00:35 GMT 2022
 */

package com.eteks.sweethome3d.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.io.ContentDigestManager;
import com.eteks.sweethome3d.io.HomeURLContent;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.SimpleURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.net.URL;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContentDigestManager_ESTest extends ContentDigestManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "1.5.0_16");
      ClassLoader classLoader0 = mockThread0.getContextClassLoader();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(classLoader0, "");
      Long long0 = contentDigestManager0.getContentSize(resourceURLContent0);
      assertEquals(4L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      MockFile mockFile0 = new MockFile("");
      URL uRL0 = mockFile0.toURL();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      Long long0 = contentDigestManager0.getContentSize(resourceURLContent0);
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      URL uRL0 = MockURL.URL("jar", "jar", "os.name");
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      // Undeclared exception!
      try { 
        contentDigestManager0.getContentSize(resourceURLContent0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      URL uRL0 = MockURL.URL("jar", "jar", 2559, "bX");
      SimpleURLContent simpleURLContent0 = new SimpleURLContent(uRL0);
      // Undeclared exception!
      try { 
        contentDigestManager0.getContentSize(simpleURLContent0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      Long long0 = contentDigestManager0.getContentSize(uRLContent0);
      assertEquals((-1L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      Long long0 = contentDigestManager0.getContentSize((Content) null);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      URL uRL0 = MockURL.URL("jar", "jar", "os.name");
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      // Undeclared exception!
      try { 
        contentDigestManager0.getContentSize(resourceURLContent0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      URL uRL0 = MockURL.URL("jar", "cm.etes.seVthomd.io.ContentDigetanager", "cm.etes.seVthomd.io.ContentDigetanager");
      HomeURLContent homeURLContent0 = new HomeURLContent(uRL0);
      // Undeclared exception!
      try { 
        contentDigestManager0.getContentSize(homeURLContent0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      MockFile mockFile0 = new MockFile("");
      URL uRL0 = mockFile0.toURL();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      byte[] byteArray0 = contentDigestManager0.getContentDigest(resourceURLContent0);
      assertEquals(20, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      URL uRL0 = MockURL.URL("jar", "jar", 2559, "jar");
      byte[] byteArray0 = new byte[2];
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      // Undeclared exception!
      try { 
        contentDigestManager0.isContentDigestEqual(resourceURLContent0, byteArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      URL uRL0 = MockURL.getHttpExample();
      HomeURLContent homeURLContent0 = new HomeURLContent(uRL0);
      byte[] byteArray0 = new byte[4];
      boolean boolean0 = contentDigestManager0.isContentDigestEqual(homeURLContent0, byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "1.5.0_16");
      ClassLoader classLoader0 = mockThread0.getContextClassLoader();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(classLoader0, "");
      byte[] byteArray0 = new byte[4];
      boolean boolean0 = contentDigestManager0.isContentDigestEqual(resourceURLContent0, byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      URL uRL0 = MockURL.URL("jar", "jar", "jar");
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      // Undeclared exception!
      try { 
        contentDigestManager0.getContentDigest(temporaryURLContent0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      URL uRL0 = MockURL.URL("jar", "jar", "jar");
      HomeURLContent homeURLContent0 = new HomeURLContent(uRL0);
      // Undeclared exception!
      try { 
        contentDigestManager0.equals((Content) homeURLContent0, (Content) homeURLContent0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      MockFile mockFile0 = new MockFile("", "jar:");
      URL uRL0 = mockFile0.toURL();
      SimpleURLContent simpleURLContent0 = new SimpleURLContent(uRL0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        contentDigestManager0.isContentDigestEqual(simpleURLContent0, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.tools.URLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        contentDigestManager0.isContentDigestEqual((Content) null, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.io.ContentDigestManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      boolean boolean0 = contentDigestManager0.equals((Content) temporaryURLContent0, (Content) temporaryURLContent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      MockThread mockThread0 = new MockThread("");
      ClassLoader classLoader0 = mockThread0.getContextClassLoader();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(classLoader0, "");
      byte[] byteArray0 = contentDigestManager0.getContentDigest(resourceURLContent0);
      contentDigestManager0.setContentDigest(resourceURLContent0, byteArray0);
      assertFalse(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ContentDigestManager contentDigestManager0 = ContentDigestManager.getInstance();
      assertNotNull(contentDigestManager0);
      
      MockThread mockThread0 = new MockThread();
      ClassLoader classLoader0 = mockThread0.getContextClassLoader();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(classLoader0, "");
      boolean boolean0 = contentDigestManager0.equals((Content) resourceURLContent0, (Content) resourceURLContent0);
      assertTrue(boolean0);
  }
}
